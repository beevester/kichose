<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.cache_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="ApiPlatformBundle">ApiPlatform\Core\Bridge\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="VichUploaderBundle">Vich\UploaderBundle\VichUploaderBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\GesdinetJWTRefreshTokenBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="OneupFlysystemBundle">Oneup\FlysystemBundle\OneupFlysystemBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/api-platform/core/src/Bridge/Symfony/Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Core\Bridge\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/lexik/jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="VichUploaderBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle</parameter>
        <parameter key="namespace">Vich\UploaderBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="LiipImagineBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/liip/imagine-bundle</parameter>
        <parameter key="namespace">Liip\ImagineBundle</parameter>
      </parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle</parameter>
        <parameter key="namespace">Gesdinet\JWTRefreshTokenBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="OneupFlysystemBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/oneup/flysystem-bundle</parameter>
        <parameter key="namespace">Oneup\FlysystemBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/antishov/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/twig/extra-bundle/src</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="container.autowiring.strict_mode">true</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="env(VARNISH_URL)"></parameter>
    <parameter key="env(DATABASE_DRIVER)"></parameter>
    <parameter key="env(DATABASE_HOST)"></parameter>
    <parameter key="env(DATABASE_PORT)"></parameter>
    <parameter key="env(DATABASE_NAME)"></parameter>
    <parameter key="env(DATABASE_USER)"></parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="env(DATABASE_PASSWORD)"></parameter>
    <parameter key="locale">en</parameter>
    <parameter key="client_url">%env(resolve:CLIENT_URL)%</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/serialization.php</parameter>
    <parameter key="serializer.mapping.cache.prefix"></parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>@VichUploader/Form/fields.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@LiipImagine/Form/form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title">Inshop CRM</parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">v1.6.2</parameter>
    <parameter key="api_platform.show_webby">true</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\InvalidArgumentException">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\FilterValidationException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
      <parameter key="App\Exception\EntityRemoveException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/json</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection"/>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.allow_plain_identifiers">false</parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">true</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">itemsPerPage</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="client_items_per_page">true</parameter>
      <parameter key="client_enabled">true</parameter>
      <parameter key="enabled">true</parameter>
      <parameter key="partial">false</parameter>
      <parameter key="client_partial">false</parameter>
      <parameter key="items_per_page">30</parameter>
      <parameter key="maximum_items_per_page">null</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="items_per_page_parameter_name">itemsPerPage</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Accept</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/src/Entity</parameter>
      <parameter>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Entity</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl">/oauth/v2/token</parameter>
    <parameter key="api_platform.oauth.authorizationUrl">/oauth/v2/auth</parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>2</parameter>
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">true</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection">
      <parameter key="apiKey" type="collection">
        <parameter key="name">Authorization</parameter>
        <parameter key="type">header</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.graphql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphql_playground.enabled">false</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection">
        <parameter>%env(CORS_ALLOW_ORIGIN)%</parameter>
      </parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers">true</parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Link</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">%env(JWT_PASSPHRASE)%</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">28800</parameter>
    <parameter key="lexik_jwt_authentication.clock_skew">0</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="lexik_jwt_authentication.user_id_claim">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="lexik_jwt_authentication.encoder.crypto_engine">openssl</parameter>
    <parameter key="doctrine_migrations.dir_name">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/src/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="vich_uploader.default_filename_attribute_suffix">_name</parameter>
    <parameter key="vich_uploader.mappings" type="collection">
      <parameter key="file" type="collection">
        <parameter key="uri_prefix">/file</parameter>
        <parameter key="upload_destination">asset_filesystem</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\UniqidNamer.file</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
      <parameter key="image" type="collection">
        <parameter key="uri_prefix">/image</parameter>
        <parameter key="upload_destination">image_filesystem</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">Vich\UploaderBundle\Naming\UniqidNamer.image</parameter>
          <parameter key="options" type="collection"/>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
    </parameter>
    <parameter key="vich_uploader.file_injector.class">Vich\UploaderBundle\Injector\FileInjector</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="liip_imagine.resolvers" type="collection">
      <parameter key="default" type="collection">
        <parameter key="web_path" type="collection">
          <parameter key="web_root">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/public</parameter>
          <parameter key="cache_prefix">media/cache</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.loaders" type="collection">
      <parameter key="default" type="collection">
        <parameter key="filesystem" type="collection">
          <parameter key="locator">filesystem</parameter>
          <parameter key="data_root" type="collection">
            <parameter>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/public</parameter>
          </parameter>
          <parameter key="allow_unresolvable_data_roots">false</parameter>
          <parameter key="bundle_resources" type="collection">
            <parameter key="enabled">false</parameter>
            <parameter key="access_control_type">blacklist</parameter>
            <parameter key="access_control_list" type="collection"/>
          </parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.jpegoptim.stripAll">true</parameter>
    <parameter key="liip_imagine.jpegoptim.max">null</parameter>
    <parameter key="liip_imagine.jpegoptim.progressive">true</parameter>
    <parameter key="liip_imagine.jpegoptim.tempDir">null</parameter>
    <parameter key="liip_imagine.optipng.binary">/usr/bin/optipng</parameter>
    <parameter key="liip_imagine.optipng.level">7</parameter>
    <parameter key="liip_imagine.optipng.stripAll">true</parameter>
    <parameter key="liip_imagine.optipng.tempDir">null</parameter>
    <parameter key="liip_imagine.pngquant.binary">/usr/bin/pngquant</parameter>
    <parameter key="liip_imagine.mozjpeg.binary">/opt/mozjpeg/bin/cjpeg</parameter>
    <parameter key="liip_imagine.driver_service">liip_imagine.gd</parameter>
    <parameter key="liip_imagine.cache.resolver.default">default</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="thumbnail_200" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">85</parameter>
        <parameter key="png_compression_level">8</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="strip" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>200</parameter>
              <parameter>150</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="allow_upscale">false</parameter>
          </parameter>
          <parameter key="background" type="collection">
            <parameter key="size" type="collection">
              <parameter>200</parameter>
              <parameter>150</parameter>
            </parameter>
            <parameter key="position">center</parameter>
            <parameter key="color">#fff</parameter>
          </parameter>
        </parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_420" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">85</parameter>
        <parameter key="png_compression_level">8</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="strip" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>420</parameter>
              <parameter>320</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="allow_upscale">false</parameter>
          </parameter>
          <parameter key="background" type="collection">
            <parameter key="size" type="collection">
              <parameter>420</parameter>
              <parameter>320</parameter>
            </parameter>
            <parameter key="position">center</parameter>
            <parameter key="color">#fff</parameter>
          </parameter>
        </parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_1000" type="collection">
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">85</parameter>
        <parameter key="png_compression_level">8</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="filters" type="collection">
          <parameter key="auto_rotate" type="collection"/>
          <parameter key="strip" type="collection"/>
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>1000</parameter>
              <parameter>750</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
            <parameter key="allow_upscale">false</parameter>
          </parameter>
        </parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">default</parameter>
    <parameter key="liip_imagine.controller.filter_action">Liip\ImagineBundle\Controller\ImagineController::filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">Liip\ImagineBundle\Controller\ImagineController::filterRuntimeAction</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl">28800</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl_update">true</parameter>
    <parameter key="gesdinet_jwt_refresh_token.security.firewall">refresh</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_provider">security.user.provider.concrete.client_provider</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_identity_field">username</parameter>
    <parameter key="gesdinet_jwt_refresh_token.single_use">false</parameter>
    <parameter key="gesdinet_jwt_refresh_token.token_parameter_name">refresh_token</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.refresh_token.class">Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.object_manager.id">doctrine.orm.entity_manager</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.user_checker.id">security.user_checker</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.event_listener.blame.class">Stof\DoctrineExtensionsBundle\EventListener\BlameListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en_US</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="api_platform.data_collector.request" type="collection">
        <parameter>api_platform.data_collector.request</parameter>
        <parameter>@ApiPlatform/DataCollector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="Vich\UploaderBundle\DataCollector\MappingCollector" type="collection">
        <parameter>vich_uploader.mapping_collector</parameter>
        <parameter>@VichUploader/Collector/mapping_collector.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Command\ElasticaIndexProductCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ElasticaIndexSearchCommand</parameter>
      <parameter>console.command.public_alias.App\Command\GoogleAuthCommand</parameter>
      <parameter>console.command.public_alias.api_platform.json_schema.json_schema_generate_command</parameter>
      <parameter>console.command.public_alias.api_platform.swagger.command.swagger_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="Google_Client" class="Google_Client">
      <call method="setDeveloperKey">
        <argument>%env(GOOGLE_API_KEY)%</argument>
      </call>
      <call method="setClientId">
        <argument>%env(GOOGLE_CLIENT_ID)%</argument>
      </call>
      <call method="setClientSecret">
        <argument>%env(GOOGLE_CLIENT_SECRET)%</argument>
      </call>
    </service>
    <service id="country.fixtures" class="App\DataFixtures\CountryFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="address.fixtures" class="App\DataFixtures\AddressFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="company.fixtures" class="App\DataFixtures\CompanyFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="template.fixtures" class="App\DataFixtures\TemplateFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="client.fixtures" class="App\DataFixtures\ClientFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="invoice.fixtures" class="App\DataFixtures\InvoiceFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="order.fixtures" class="App\DataFixtures\OrderFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="role.fixtures" class="App\DataFixtures\RoleFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="product.fixtures" class="App\DataFixtures\ProductFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="user.fixtures" class="App\DataFixtures\UserFixtures">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="text.fixtures" class="App\DataFixtures\TextFixtures">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\Command\ElasticaIndexProductCommand" class="App\Command\ElasticaIndexProductCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientProduct"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\ElasticaIndexSearchCommand" class="App\Command\ElasticaIndexSearchCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientSearch"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Command\GoogleAuthCommand" class="App\Command\GoogleAuthCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Service\GoogleClient"/>
    </service>
    <service id="App\Controller\Category\CategoryFrontendGetCollectionAction" class="App\Controller\Category\CategoryFrontendGetCollectionAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Category\CategoryFrontendGetItemAction" class="App\Controller\Category\CategoryFrontendGetItemAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Client\ClientGetItemAction" class="App\Controller\Client\ClientGetItemAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Client\ClientLoginByTokenCollectionAction" class="App\Controller\Client\ClientLoginByTokenCollectionAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Client\ClientPutItemController" class="App\Controller\Client\ClientPutItemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\Client\ClientPutItemController"/>
      </call>
    </service>
    <service id="App\Controller\Client\ClientRemindPasswordCollectionController" class="App\Controller\Client\ClientRemindPasswordCollectionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\Client\ClientRemindPasswordCollectionController"/>
      </call>
    </service>
    <service id="App\Controller\Client\ClientSignupPostCollectionController" class="App\Controller\Client\ClientSignupPostCollectionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\Client\ClientSignupPostCollectionController"/>
      </call>
    </service>
    <service id="App\Controller\CompanyLastAction" class="App\Controller\CompanyLastAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Controller\CreateFileAction" class="App\Controller\CreateFileAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Controller\CreateImageAction" class="App\Controller\CreateImageAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="App\Controller\DashboardAction" class="App\Controller\DashboardAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Controller\DownloadFileAction" class="App\Controller\DownloadFileAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\DownloadFileAction"/>
      </call>
    </service>
    <service id="App\Controller\History\HistoryGetEntityCollectionAction" class="App\Controller\History\HistoryGetEntityCollectionAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\Opportunity\OpportunityNotification" class="App\Controller\Opportunity\OpportunityNotification" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\Opportunity\OpportunityNotification"/>
      </call>
    </service>
    <service id="App\Controller\Product\ProductFrontendGetItemAction" class="App\Controller\Product\ProductFrontendGetItemAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientProduct"/>
    </service>
    <service id="App\Controller\SearchAction" class="App\Controller\SearchAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\TaskDeadlineAction" class="App\Controller\TaskDeadlineAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Controller\Text\TextFrontendGetItemAction" class="App\Controller\Text\TextFrontendGetItemAction" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="App\Controller\User\UserPostCollectionController" class="App\Controller\User\UserPostCollectionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\User\UserPostCollectionController"/>
      </call>
    </service>
    <service id="App\Controller\User\UserPutItemController" class="App\Controller\User\UserPutItemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.pNNo5z3.App\Controller\User\UserPutItemController"/>
      </call>
    </service>
    <service id="App\EventListener\AuthenticationSuccessListener" class="App\EventListener\AuthenticationSuccessListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\EventListener\ElasticaProductListener" class="App\EventListener\ElasticaProductListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientProduct"/>
    </service>
    <service id="App\EventListener\ElasticaSearchListener" class="App\EventListener\ElasticaSearchListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientSearch"/>
    </service>
    <service id="App\EventListener\EntityRemoveListener" class="App\EventListener\EntityRemoveListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="preRemove"/>
    </service>
    <service id="App\EventListener\JWTCreatedListener" class="App\EventListener\JWTCreatedListener" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\Logger\EntityLogger" class="App\EventListener\Logger\EntityLogger" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\Logger\EntityLoggerSubscriber" class="App\EventListener\Logger\EntityLoggerSubscriber" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\EventListener\OpportunitySubscriber" class="App\EventListener\OpportunitySubscriber" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\TaskListener" class="App\EventListener\TaskListener" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\GoogleClient"/>
    </service>
    <service id="App\Exception\EntityRemoveException" class="App\Exception\EntityRemoveException" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\FileType" class="App\Form\FileType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\ImageType" class="App\Form\ImageType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Kernel" class="App\Kernel" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\AddressRepository" class="App\Repository\AddressRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\BrandRepository" class="App\Repository\BrandRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CategoryRepository" class="App\Repository\CategoryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CategoryTranslationRepository" class="App\Repository\CategoryTranslationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ChannelRepository" class="App\Repository\ChannelRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ClientRepository" class="App\Repository\ClientRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CompanyProductRepository" class="App\Repository\CompanyProductRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CompanyRepository" class="App\Repository\CompanyRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContactRepository" class="App\Repository\ContactRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContactTypeRepository" class="App\Repository\ContactTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CountryRepository" class="App\Repository\CountryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CurrencyRepository" class="App\Repository\CurrencyRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DealTypeRepository" class="App\Repository\DealTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DivisionRepository" class="App\Repository\DivisionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\GroupRepository" class="App\Repository\GroupRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\HistoryRepository" class="App\Repository\HistoryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceHeaderRepository" class="App\Repository\InvoiceHeaderRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceLineRepository" class="App\Repository\InvoiceLineRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceStatusRepository" class="App\Repository\InvoiceStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\InvoiceTypeRepository" class="App\Repository\InvoiceTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LabelRepository" class="App\Repository\LabelRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LanguageRepository" class="App\Repository\LanguageRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ModuleRepository" class="App\Repository\ModuleRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OpportunityRepository" class="App\Repository\OpportunityRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OpportunityStatusRepository" class="App\Repository\OpportunityStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OrderHeaderRepository" class="App\Repository\OrderHeaderRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OrderLineRepository" class="App\Repository\OrderLineRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OrderLineStatusRepository" class="App\Repository\OrderLineStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\OrderStatusRepository" class="App\Repository\OrderStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PaymentTypeRepository" class="App\Repository\PaymentTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProductRepository" class="App\Repository\ProductRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProductSellPriceRepository" class="App\Repository\ProductSellPriceRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProductTranslationRepository" class="App\Repository\ProductTranslationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProjectStatusRepository" class="App\Repository\ProjectStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProjectTypeRepository" class="App\Repository\ProjectTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PurchaseOrderHeaderRepository" class="App\Repository\PurchaseOrderHeaderRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PurchaseOrderLineRepository" class="App\Repository\PurchaseOrderLineRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PurchaseOrderLineStatusRepository" class="App\Repository\PurchaseOrderLineStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PurchaseOrderStatusRepository" class="App\Repository\PurchaseOrderStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RoleRepository" class="App\Repository\RoleRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShipmentMethodRepository" class="App\Repository\ShipmentMethodRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShippingNoticeHeaderRepository" class="App\Repository\ShippingNoticeHeaderRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShippingNoticeLineRepository" class="App\Repository\ShippingNoticeLineRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShippingNoticeLineStatusRepository" class="App\Repository\ShippingNoticeLineStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ShippingNoticeStatusRepository" class="App\Repository\ShippingNoticeStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\StockLineRepository" class="App\Repository\StockLineRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\StockLineStatusRepository" class="App\Repository\StockLineStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TaskStatusRepository" class="App\Repository\TaskStatusRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TemplateTypeRepository" class="App\Repository\TemplateTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TextRepository" class="App\Repository\TextRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TextTranslationRepository" class="App\Repository\TextTranslationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\VatRepository" class="App\Repository\VatRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\WarehouseRepository" class="App\Repository\WarehouseRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\UserChecker" class="App\Security\UserChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Service\DataProvider\ProductCollectionDataProvider" class="App\Service\DataProvider\ProductCollectionDataProvider" public="false" autowire="true" autoconfigure="true">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientProduct"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Service\DataProvider\SearchCollectionDataProvider" class="App\Service\DataProvider\SearchCollectionDataProvider" public="false" autowire="true" autoconfigure="true">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientSearch"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Service\Elastica\Client\ElasticaClient" class="App\Service\Elastica\Client\ElasticaClient" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Service\Elastica\Client\ElasticaClientProduct" class="App\Service\Elastica\Client\ElasticaClientProduct" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClient"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="App\Service\Elastica\Client\ElasticaClientSearch" class="App\Service\Elastica\Client\ElasticaClientSearch" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClient"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="App\Service\ElasticaPaginator" class="App\Service\ElasticaPaginator" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Service\GoogleClient" class="App\Service\GoogleClient" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="Google_Client"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\Normalizer\ElasticaCollectionNormalizer" class="App\Service\Normalizer\ElasticaCollectionNormalizer" public="false" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer" priority="17"/>
      <tag name="serializer.normalizer"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="App\Service\Normalizer\ElasticaItemNormalizer" class="App\Service\Normalizer\ElasticaItemNormalizer" public="false" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer" priority="17"/>
      <tag name="serializer.normalizer"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api.event.jwt_created_listener" class="App\EventListener\JWTCreatedListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_jwt_created" method="onJWTCreated"/>
    </service>
    <service id="api.event.authentication_success_listener" class="App\EventListener\AuthenticationSuccessListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="onAuthenticationSuccessResponse"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="app.entity_logger.subscriber" class="App\EventListener\Logger\EntityLoggerSubscriber" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="app.elastica.listener.search.index" class="App\EventListener\ElasticaSearchListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postPersist"/>
      <tag name="doctrine.event_listener" event="postUpdate"/>
      <tag name="doctrine.event_listener" event="preRemove"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientSearch"/>
    </service>
    <service id="app.elastica.listener.product.index" class="App\EventListener\ElasticaProductListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postPersist"/>
      <tag name="doctrine.event_listener" event="postUpdate"/>
      <tag name="doctrine.event_listener" event="preRemove"/>
      <argument type="service" id="App\Service\Elastica\Client\ElasticaClientProduct"/>
    </service>
    <service id="app.elastica.listener.task" class="App\EventListener\TaskListener" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_listener" event="postPersist"/>
      <tag name="doctrine.event_listener" event="postUpdate"/>
      <tag name="doctrine.event_listener" event="preRemove"/>
      <argument type="service" id="App\Service\GoogleClient"/>
    </service>
    <service id="app.redis" class="Redis" public="false" autowire="true" autoconfigure="true">
      <call method="connect">
        <argument>%env(REDIS_HOST)%</argument>
        <argument>%env(int:REDIS_PORT)%</argument>
      </call>
    </service>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="app.redis"/>
    </service>
    <service id="app.s3_client" class="Aws\S3\S3Client" public="false" autowire="true" autoconfigure="true">
      <argument type="collection">
        <argument key="version">latest</argument>
        <argument key="region">%env(AWS_S3_BUCKET_REGION)%</argument>
        <argument key="credentials" type="collection">
          <argument key="key">%env(AWS_S3_ACCESS_ID)%</argument>
          <argument key="secret">%env(AWS_S3_ACCESS_SECRET)%</argument>
        </argument>
      </argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.identifiers_extractor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.subresource_operation_factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger" public="false">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~dcExhgL" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~dcExhgL" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~dcExhgL"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument type="service" id=".2_~dcExhgL"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.security_expression_language</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/translations</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</argument>
      <argument type="collection">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/translations</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</argument>
      <argument type="collection">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Vich\UploaderBundle\Form\Type</argument>
        <argument>Liip\ImagineBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\FileType</argument>
        <argument>App\Form\ImageType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichFileType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichImageType</argument>
        <argument>Liip\ImagineBundle\Form\Type\ImageType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~BzoHAqU" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <factory service="session" method="getAttributeBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~BzoHAqU"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.f1ancQ8"/>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~eOm.fqR"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.xslnwHz"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Y7gDuDN"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>loose</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.V.o0zE7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.ar.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.bg.yml</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.ca.yml</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.cs.yml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.es.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.fi.yml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.hu.yml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.it.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.lt.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.nl.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.pt.yml</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.ru.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.sl.yml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.uk.yml</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="vn" type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations/VichUploaderBundle.vn.yml</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/validator/Resources/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/form/Resources/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/framework-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/nelmio/cors-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/maker-bundle/src/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/lexik/jwt-authentication-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/jms/serializer-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/liip/imagine-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/swiftmailer-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/oneup/flysystem-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/antishov/doctrine-extensions-bundle/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/twig/extra-bundle/src/translations</argument>
          <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>vendor/vich/uploader-bundle/translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/api-platform/core/src/Bridge/Symfony/Bundle/translations</argument>
            <argument>vendor/nelmio/cors-bundle/translations</argument>
            <argument>vendor/symfony/maker-bundle/src/translations</argument>
            <argument>vendor/lexik/jwt-authentication-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>vendor/jms/serializer-bundle/translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>vendor/liip/imagine-bundle/translations</argument>
            <argument>vendor/gesdinet/jwt-refresh-token-bundle/translations</argument>
            <argument>vendor/symfony/swiftmailer-bundle/translations</argument>
            <argument>vendor/oneup/flysystem-bundle/translations</argument>
            <argument>vendor/antishov/doctrine-extensions-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/src/translations</argument>
            <argument>translations</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.JFjjyG5.translation.warmer"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="api_platform.data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="Vich\UploaderBundle\DataCollector\MappingCollector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument type="service" id="api_platform.cache.route_name_resolver"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.resource</argument>
        <argument type="service" id="api_platform.cache.metadata.resource"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.property</argument>
        <argument type="service" id="api_platform.cache.metadata.property"/>
      </call>
    </service>
    <service id=".1_ResolvedFormTypeFactory~eOm.fqR" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_jwt_created</argument>
        <argument type="collection">
          <argument type="service" id="api.event.jwt_created_listener"/>
          <argument>onJWTCreated</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service" id="api.event.authentication_success_listener"/>
          <argument>onAuthenticationSuccessResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.request.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.swagger.listener.ui"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.hydra.listener.response.add_link_header"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.http_cache.listener.response.configure"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.listener.view.validate_query_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurity</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostDenormalize</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service" id="gesdinet.jwtrefreshtoken.send_token"/>
          <argument>attachRefreshToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="stof_doctrine_extensions.event_listener.blame"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.mshSVvX"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.LoApRHL.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.3TLJ8AE.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~YKc7Mm7" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~YKc7Mm7" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~YKc7Mm7"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~YKc7Mm7"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/.env.dev.local</argument>
    </service>
    <service id=".2_~.ourj1H" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~.ourj1H" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="App\Service\Normalizer\ElasticaCollectionNormalizer"/>
        <argument type="service" id="App\Service\Normalizer\ElasticaItemNormalizer"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.problem.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.hydra.normalizer.error"/>
        <argument type="service" id="api_platform.problem.normalizer.error"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="api_platform.serializer.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
        <argument type="service" id="api_platform.jsonld.encoder"/>
        <argument type="service" id="api_platform.problem.encoder"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
      <argument>null</argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~.ourj1H"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~.ourj1H"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id=".1_~n5GHZVa" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="autoescape">name</argument>
        <argument key="cache">/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Vich\UploaderBundle\Twig\Extension\UploaderExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="liip_imagine.templating.filter_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.cssinliner"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.inky"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.lSARbri.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/templates</argument>
        <argument>VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/templates</argument>
        <argument>!VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/liip/imagine-bundle/Resources/views</argument>
        <argument>!LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.7puFXBj"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~n5GHZVa"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.login"/>
        <argument type="service" id="security.authentication.provider.anonymous.login"/>
        <argument type="service" id="security.authentication.provider.dao.client_login"/>
        <argument type="service" id="security.authentication.provider.anonymous.client_login"/>
        <argument type="service" id="security.authentication.provider.guard.frontend_profile"/>
        <argument type="service" id="security.authentication.provider.anonymous.frontend"/>
        <argument type="service" id="security.authentication.provider.dao.docs"/>
        <argument type="service" id="security.authentication.provider.guard.api"/>
        <argument type="service" id="security.authentication.provider.anonymous.api"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>2y</argument>
          </argument>
        </argument>
        <argument key="App\Entity\Client" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>null</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter" public="false">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.0zPEIXe"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.login" type="service" id=".security.request_matcher.aOksG4F"/>
        <argument key="security.firewall.map.context.client_login" type="service" id=".security.request_matcher._7j8kB_"/>
        <argument key="security.firewall.map.context.frontend_profile" type="service" id=".security.request_matcher.9x_cU.3"/>
        <argument key="security.firewall.map.context.frontend" type="service" id=".security.request_matcher.jg.jrf_"/>
        <argument key="security.firewall.map.context.docs" type="service" id=".security.request_matcher.mlam9l."/>
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.JceDkdx"/>
        <argument type="collection">
          <argument>ROLE_CLIENT</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.x9ti5HG"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.db_provider"/>
        <argument type="service" id="security.user.provider.concrete.client_provider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>login</argument>
        <argument>client_login</argument>
        <argument>frontend_profile</argument>
        <argument>docs</argument>
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.db_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.client_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\Client</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>login</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.aOksG4F</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.db_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>json_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.aOksG4F" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id="security.authentication.provider.dao.login" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.db_provider"/>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument>login</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="collection"/>
      <argument>login</argument>
    </service>
    <service id="security.authentication.failure_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.listener.json.login" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument type="service" id="security.authentication.success_handler.login.json_login"/>
      <argument type="service" id="security.authentication.failure_handler.login.json_login"/>
      <argument type="collection">
        <argument key="check_path">/login</argument>
        <argument key="username_path">username</argument>
        <argument key="password_path">password</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="use_forward">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.authentication.listener.anonymous.login" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.login" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.login" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.json.login"/>
        <argument type="service" id="security.authentication.listener.anonymous.login"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.login"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.login"/>
    </service>
    <service id="security.firewall.map.config.client_login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>client_login</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher._7j8kB_</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.client_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>json_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher._7j8kB_" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/frontend/login</argument>
    </service>
    <service id="security.authentication.provider.dao.client_login" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.client_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>client_login</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.client_login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="collection"/>
      <argument>client_login</argument>
    </service>
    <service id="security.authentication.failure_handler.client_login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.listener.json.client_login" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument>client_login</argument>
      <argument type="service" id="security.authentication.success_handler.client_login.json_login"/>
      <argument type="service" id="security.authentication.failure_handler.client_login.json_login"/>
      <argument type="collection">
        <argument key="check_path">/frontend/login</argument>
        <argument key="username_path">username</argument>
        <argument key="password_path">password</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="use_forward">false</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.authentication.listener.anonymous.client_login" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.client_login" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.client_login" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>client_login</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.client_login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.json.client_login"/>
        <argument type="service" id="security.authentication.listener.anonymous.client_login"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.client_login"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.client_login"/>
    </service>
    <service id="security.firewall.map.config.frontend_profile" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>frontend_profile</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.9x_cU.3</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.client_provider</argument>
      <argument>null</argument>
      <argument>lexik_jwt_authentication.jwt_token_authenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.9x_cU.3" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/frontend/profile</argument>
    </service>
    <service id="security.authentication.provider.guard.frontend_profile" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.client_provider"/>
      <argument>frontend_profile</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.frontend_profile" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="frontend_profile" provider="security.user.provider.concrete.client_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>frontend_profile</argument>
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.exception_listener.frontend_profile" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>frontend_profile</argument>
      <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.frontend_profile" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.frontend_profile"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.frontend_profile"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.frontend_profile"/>
    </service>
    <service id="security.firewall.map.config.frontend" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>frontend</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.jg.jrf_</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.client_provider</argument>
      <argument>frontend</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.jg.jrf_" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/frontend</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.db_provider"/>
        <argument type="service" id="security.user.provider.concrete.client_provider"/>
      </argument>
      <argument>frontend</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.authentication.listener.anonymous.frontend" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.frontend" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.frontend" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>frontend</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.frontend" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.anonymous.frontend"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.frontend"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.frontend"/>
    </service>
    <service id="security.firewall.map.config.docs" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>docs</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.mlam9l.</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.db_provider</argument>
      <argument>null</argument>
      <argument>security.authentication.basic_entry_point.docs</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>http_basic</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.mlam9l." class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/docs</argument>
    </service>
    <service id="security.authentication.provider.dao.docs" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.db_provider"/>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument>docs</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.basic_entry_point.docs" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false">
      <argument>Secured Area</argument>
    </service>
    <service id="security.authentication.listener.basic.docs" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>docs</argument>
      <argument type="service" id="security.authentication.basic_entry_point.docs"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.exception_listener.docs" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>docs</argument>
      <argument type="service" id="security.authentication.basic_entry_point.docs"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.docs" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.basic.docs"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.docs"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.docs"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.db_provider</argument>
      <argument>null</argument>
      <argument>lexik_jwt_authentication.jwt_token_authenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.authentication.provider.guard.api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.db_provider"/>
      <argument>api</argument>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api" provider="security.user.provider.concrete.db_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.anonymous.api" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.authentication.listener.anonymous.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id=".service_locator.0zPEIXe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.client_login" type="service" id="security.firewall.map.context.client_login"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.docs" type="service" id="security.firewall.map.context.docs"/>
        <argument key="security.firewall.map.context.frontend" type="service" id="security.firewall.map.context.frontend"/>
        <argument key="security.firewall.map.context.frontend_profile" type="service" id="security.firewall.map.context.frontend_profile"/>
        <argument key="security.firewall.map.context.login" type="service" id="security.firewall.map.context.login"/>
      </argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.JceDkdx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/frontend/profile</argument>
    </service>
    <service id=".security.request_matcher.x9ti5HG" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/frontend</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
        <argument>App\Entity\Client</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.unKn8Zf"/>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.clean.file"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.clean.image"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="app.entity_logger.subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.remove.file"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.upload.file"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.remove.image"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="vich_uploader.listener.upload.image"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.timestampable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.sluggable"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preRemove</argument>
        </argument>
        <argument>App\EventListener\EntityRemoveListener</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postPersist</argument>
        </argument>
        <argument>app.elastica.listener.search.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postUpdate</argument>
        </argument>
        <argument>app.elastica.listener.search.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preRemove</argument>
        </argument>
        <argument>app.elastica.listener.search.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postPersist</argument>
        </argument>
        <argument>app.elastica.listener.product.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postUpdate</argument>
        </argument>
        <argument>app.elastica.listener.product.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preRemove</argument>
        </argument>
        <argument>app.elastica.listener.product.index</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postPersist</argument>
        </argument>
        <argument>app.elastica.listener.task</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>postUpdate</argument>
        </argument>
        <argument>app.elastica.listener.task</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>preRemove</argument>
        </argument>
        <argument>app.elastica.listener.task</argument>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">%env(resolve:DATABASE_DRIVER)%</argument>
        <argument key="host">%env(resolve:DATABASE_HOST)%</argument>
        <argument key="port">%env(resolve:DATABASE_PORT)%</argument>
        <argument key="dbname">%env(resolve:DATABASE_NAME)%</argument>
        <argument key="user">%env(resolve:DATABASE_USER)%</argument>
        <argument key="password">%env(resolve:DATABASE_PASSWORD)%</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion">11.4</argument>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~JAnDRWq" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.OvoqNwA"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="VichUploaderBundle">Vich\UploaderBundle\Entity</argument>
          <argument key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/src/Entity</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/vich/uploader-bundle/src/Entity</argument>
        <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Vich\UploaderBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Resources/config/orm/doctrine-orm">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                  <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Resources/config/orm/doctrine-entity">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Resources/config/orm/doctrine-orm">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                  <argument key="/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/vendor/gesdinet/jwt-refresh-token-bundle/Resources/config/orm/doctrine-entity">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata" connection="default"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.route_name_resolver.cached" class="ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver" public="false">
      <argument type="service" id="api_platform.cache.route_name_resolver"/>
      <argument type="service" id="api_platform.route_name_resolver.cached.inner"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
      <argument type="service" id="router.default"/>
    </service>
    <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="api_platform.route_name_resolver.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore"/>
      <argument type="service" id="api_platform.identifier.converter" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.formats_provider" class="ApiPlatform\Core\Api\FormatsProvider">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Core\Serializer\SerializerFilterContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter.inner"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Core\Serializer\Filter\GroupFilter" public="false" abstract="true"/>
    <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Core\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-895"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.operation_path_resolver.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
    </service>
    <service id="api_platform.operation_path_resolver.custom" class="ApiPlatform\Core\PathResolver\CustomOperationPathResolver" public="false">
      <argument type="service" id="api_platform.operation_path_resolver.generator"/>
    </service>
    <service id="api_platform.operation_path_resolver.generator" class="ApiPlatform\Core\PathResolver\OperationPathResolver" public="false">
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id="api_platform.operation_path_resolver.underscore" class="ApiPlatform\Core\PathResolver\UnderscoreOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.underscore" instead.</deprecated>
    </service>
    <service id="api_platform.operation_path_resolver.dash" class="ApiPlatform\Core\PathResolver\DashOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.dash" instead.</deprecated>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator" public="false"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Core\Operation\DashPathSegmentNameGenerator" public="false"/>
    <service id="api_platform.listener.request.add_format" class="ApiPlatform\Core\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="7"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.listener.request.read" class="ApiPlatform\Core\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.identifier.converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.write" class="ApiPlatform\Core\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="32"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Core\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.serialize" class="ApiPlatform\Core\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.respond" class="ApiPlatform\Core\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.exception.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Core\EventListener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>api_platform.action.exception</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="exception_listener" on-invalid="null"/>
    </service>
    <service id="api_platform.action.placeholder" class="ApiPlatform\Core\Action\PlaceholderAction" public="true"/>
    <service id="api_platform.action.not_found" class="ApiPlatform\Core\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Core\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Core\Documentation\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument>Inshop CRM</argument>
      <argument></argument>
      <argument>v1.6.2</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.action.exception" class="ApiPlatform\Core\Action\ExceptionAction" public="true">
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.identifiers_extractor.cached" class="ApiPlatform\Core\Api\CachedIdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached.inner"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.identifier.converter" class="ApiPlatform\Core\Identifier\IdentifierConverter" public="false">
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.integer" class="ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.date_normalizer" class="ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached.inner"/>
    </service>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.route_name_resolver.recorder_inner"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.identifiers_extractor.recorder_inner"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.subresource_operation_factory.recorder_inner"/>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Core\Bridge\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service" id="serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\Core\DataProvider\Pagination">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_module_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_module_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_role_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_role_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
        <argument key="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_date_filter" type="service" id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_date_filter"/>
        <argument key="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_order_filter" type="service" id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_order_filter"/>
        <argument key="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_search_filter" type="service" id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_search_filter"/>
      </argument>
    </service>
    <service id="api_platform.filter_collection_factory" class="ApiPlatform\Core\Api\FilterCollectionFactory" public="false">
      <argument type="collection">
        <argument>annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_role_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_module_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
        <argument>annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter</argument>
        <argument>annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter</argument>
        <argument>annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter</argument>
      </argument>
    </service>
    <service id="api_platform.filters" class="ApiPlatform\Core\Api\FilterCollection" public="false">
      <argument type="service" id="api_platform.filter_locator"/>
      <factory service="api_platform.filter_collection_factory" method="createFilterCollectionFromLocator"/>
      <deprecated>The "%service_id%" service is deprecated since 2.1 and will be removed in 3.0. Use the "api_platform.filter_locator" service instead.</deprecated>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.php_doc"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation"/>
      <argument type="collection"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.formats" class="ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation"/>
      <argument>%api_platform.formats%</argument>
      <argument type="collection"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.formats"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" public="false">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.inherited" class="ApiPlatform\Core\Metadata\Property\Factory\InheritedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.resource.recorder_inner"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.property.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.extractor.xml" class="ApiPlatform\Core\Metadata\Extractor\XmlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.inherited"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceFilterMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.subresource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationSubresourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.metadata.extractor.yaml" class="ApiPlatform\Core\Metadata\Extractor\YamlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc" class="ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output"/>
    </service>
    <service id="api_platform.json_schema.type_factory" class="ApiPlatform\Core\JsonSchema\TypeFactory" public="false">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <call method="setSchemaFactory">
        <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      </call>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\Core\JsonSchema\Command\JsonSchemaGenerateCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway" class="ApiPlatform\Core\Swagger\Serializer\ApiGatewayNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.swagger.normalizer.api_gateway.inner"/>
    </service>
    <service id="api_platform.swagger.command.swagger_command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\SwaggerCommand">
      <tag name="console.command"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument>Inshop CRM</argument>
      <argument></argument>
      <argument>v1.6.2</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.swagger.listener.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.swagger.action.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Action\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default"/>
      <argument>Inshop CRM</argument>
      <argument></argument>
      <argument>v1.6.2</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\Core\JsonLd\ContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonld.normalizer.item" class="ApiPlatform\Core\JsonLd\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument>false</argument>
    </service>
    <service id="api_platform.jsonld.normalizer.object" class="ApiPlatform\Core\JsonLd\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="api_platform.jsonld.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonld</argument>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\Core\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.hydra.normalizer.documentation" class="ApiPlatform\Core\Hydra\Serializer\DocumentationNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.listener.response.add_link_header" class="ApiPlatform\Core\Hydra\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" class="ApiPlatform\Core\Hydra\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.normalizer.entrypoint" class="ApiPlatform\Core\Hydra\Serializer\EntrypointNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.error" class="ApiPlatform\Core\Hydra\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Core\Hydra\Serializer\PartialCollectionViewNormalizer" public="false">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Core\Hydra\Serializer\CollectionFiltersNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
    </service>
    <service id="api_platform.problem.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonproblem</argument>
    </service>
    <service id="api_platform.problem.normalizer.constraint_violation_list" class="ApiPlatform\Core\Problem\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.problem.normalizer.error" class="ApiPlatform\Core\Problem\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-810"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.data_persister" class="ApiPlatform\Core\Bridge\Doctrine\Common\DataPersister" public="false">
      <tag name="api_platform.data_persister" priority="-1000"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.collection_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.item_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.subresource_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.collection_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\CollectionDataProvider" public="false">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.default.item_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\ItemDataProvider" public="false">
      <tag name="api_platform.item_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.subresource_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\SubresourceDataProvider" public="false">
      <tag name="api_platform.subresource_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="api_platform.iri_converter"/>
      <argument key="3" type="service" id="property_accessor"/>
      <argument key="4" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="6" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument key="7" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2">order</argument>
      <argument key="3" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument key="4">exists</argument>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.inherited"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-8"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.http_cache.listener.response.configure" class="ApiPlatform\Core\HttpCache\EventListener\AddHeadersListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-1"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Validator">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory" public="false">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.listener.view.validate" class="ApiPlatform\Core\Validator\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="64"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.validate_query_parameters" class="ApiPlatform\Core\Filter\QueryParameterValidateListener" public="false">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="16"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataCollector\RequestDataCollector" public="false">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
    </service>
    <service id="debug.api_platform.collection_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainCollectionDataProvider">
      <argument type="service" id="debug.api_platform.collection_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.item_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainItemDataProvider">
      <argument type="service" id="debug.api_platform.item_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainSubresourceDataProvider">
      <argument type="service" id="debug.api_platform.subresource_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.data_persister" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataPersister\TraceableChainDataPersister">
      <argument type="service" id="debug.api_platform.data_persister.inner"/>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Core\Security\ResourceAccessChecker" public="false">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="api_platform.security.listener.request.deny_access" class="ApiPlatform\Core\Security\EventListener\DenyAccessListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurity" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurityPostDenormalize" priority="1"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Core\Security\Core\Authorization\ExpressionLanguageProvider" public="false">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand" public="true">
      <tag name="console.command" command="lexik:jwt:check-config"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:check-config</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_token_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateTokenCommand" public="true">
      <tag name="console.command" command="lexik:jwt:generate-token"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.db_provider"/>
        <argument type="service" id="security.user.provider.concrete.client_provider"/>
      </argument>
      <call method="setName">
        <argument>lexik:jwt:generate-token</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
      <argument></argument>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.listener" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint" public="false">
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager" public="true">
      <argument type="service" id="lexik_jwt_authentication.encoder.lcobucci"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.key_loader.openssl" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\OpenSSLKeyLoader" public="false">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <deprecated>The "%service_id%" service is deprecated since version 2.5 and will be removed in 3.0. Use lexik_jwt_authentication.key_loader.raw instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/config/jwt/private.pem</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/config/jwt/public.pem</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.encoder.default" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.default"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.default" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\DefaultJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>28800</argument>
      <argument>0</argument>
      <deprecated>The "%service_id%" is deprecated since version 2.5 and will be removed in 5.0, use "lexik_jwt_authentication.jws_provider.lcobucci" instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.encoder.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.lcobucci"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\LcobucciJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>28800</argument>
      <argument>0</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor" public="false">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider" public="false">
      <argument></argument>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="Vich\UploaderBundle\Naming\UniqidNamer.file" class="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\UniqidNamer.image" class="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="vich_uploader.adapter.mongodb" class="Vich\UploaderBundle\Adapter\ODM\MongoDB\MongoDBAdapter" public="false"/>
    <service id="vich_uploader.adapter.orm" class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
    <service id="vich_uploader.adapter.phpcr" class="Vich\UploaderBundle\Adapter\PHPCR\PHPCRAdapter" public="false"/>
    <service id="vich_uploader.listener.doctrine.base" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.orm" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.orm" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.orm" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.orm" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.storage.file_system" class="Vich\UploaderBundle\Storage\FileSystemStorage" public="false">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
    </service>
    <service id="vich_uploader.file_injector" class="Vich\UploaderBundle\Injector\FileInjector" public="false">
      <argument type="service" id="vich_uploader.storage.flysystem"/>
    </service>
    <service id="vich_uploader.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="vich_uploader.metadata_driver.annotation" class="Vich\UploaderBundle\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="vich_uploader.metadata_driver.xml" class="Vich\UploaderBundle\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.yaml" class="Vich\UploaderBundle\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.chain" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="vich_uploader.metadata_driver.xml"/>
        <argument type="service" id="vich_uploader.metadata_driver.annotation"/>
        <argument type="service" id="vich_uploader.metadata_driver.yaml"/>
      </argument>
    </service>
    <service id="vich_uploader.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/vich_uploader</argument>
    </service>
    <service id="vich_uploader.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="vich_uploader.metadata_driver.chain"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="vich_uploader.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="vich_uploader.metadata_reader" class="Vich\UploaderBundle\Metadata\MetadataReader" public="false">
      <argument type="service" id="vich_uploader.metadata_factory"/>
    </service>
    <service id="vich_uploader.property_mapping_factory" class="Vich\UploaderBundle\Mapping\PropertyMappingFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument>%vich_uploader.mappings%</argument>
      <argument>_name</argument>
    </service>
    <service id="Vich\UploaderBundle\Naming\UniqidNamer" class="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyNamer" class="Vich\UploaderBundle\Naming\PropertyNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\OrignameNamer" class="Vich\UploaderBundle\Naming\OrignameNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\HashNamer" class="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\Base64Namer" class="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" class="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" class="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true">
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="vich_uploader.current_date_time_helper" class="Vich\UploaderBundle\Naming\CurrentDateTimeHelper" public="false"/>
    <service id="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" class="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true">
      <argument type="service" id="vich_uploader.current_date_time_helper" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Util\Transliterator" class="Vich\UploaderBundle\Util\Transliterator" public="false">
      <argument type="service" id="slugger"/>
    </service>
    <service id="vich_uploader.download_handler" class="Vich\UploaderBundle\Handler\DownloadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.flysystem"/>
    </service>
    <service id="vich_uploader.upload_handler" class="Vich\UploaderBundle\Handler\UploadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.flysystem"/>
      <argument type="service" id="vich_uploader.file_injector"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="vich_uploader.command.mapping_debug_class" class="Vich\UploaderBundle\Command\MappingDebugClassCommand" public="false">
      <tag name="console.command" command="vich:mapping:debug-class"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:debug-class</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_debug" class="Vich\UploaderBundle\Command\MappingDebugCommand" public="false">
      <tag name="console.command" command="vich:mapping:debug"/>
      <argument>%vich_uploader.mappings%</argument>
      <call method="setName">
        <argument>vich:mapping:debug</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_list_classes" class="Vich\UploaderBundle\Command\MappingListClassesCommand" public="false">
      <tag name="console.command" command="vich:mapping:list-classes"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:list-classes</argument>
      </call>
    </service>
    <service id="Vich\UploaderBundle\DataCollector\MappingCollector" class="Vich\UploaderBundle\DataCollector\MappingCollector" public="false">
      <tag name="data_collector" template="@VichUploader/Collector/mapping_collector.html.twig" id="vich_uploader.mapping_collector"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
    </service>
    <service id="vich_uploader.storage.flysystem" class="Vich\UploaderBundle\Storage\FlysystemStorage" public="false">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="oneup_flysystem.mount_manager"/>
    </service>
    <service id="vich_uploader.form.type.file" class="Vich\UploaderBundle\Form\Type\VichFileType" public="true">
      <tag name="form.type" alias="vich_file"/>
      <argument type="service" id="vich_uploader.storage.flysystem"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="vich_uploader.form.type.image" class="Vich\UploaderBundle\Form\Type\VichImageType" public="true">
      <tag name="form.type" alias="vich_image"/>
      <argument type="service" id="vich_uploader.storage.flysystem"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="liip_imagine.cache.manager" on-invalid="null"/>
    </service>
    <service id="Vich\UploaderBundle\Templating\Helper\UploaderHelper" class="Vich\UploaderBundle\Templating\Helper\UploaderHelper" public="false">
      <tag name="templating.helper" alias="vich_uploader"/>
      <argument type="service" id="vich_uploader.storage.flysystem"/>
    </service>
    <service id="Vich\UploaderBundle\Twig\Extension\UploaderExtension" class="Vich\UploaderBundle\Twig\Extension\UploaderExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="Vich\UploaderBundle\Templating\Helper\UploaderHelper"/>
    </service>
    <service id="vich_uploader.listener.clean.file" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <tag name="doctrine.event_subscriber" priority="50"/>
      <argument>file</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.file" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>file</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.file" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>file</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.image" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <tag name="doctrine.event_subscriber" priority="50"/>
      <argument>image</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.image" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>image</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.image" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>image</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      <deprecated>The "%service_id%" service is deprecated since version 5.2</deprecated>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter" public="false">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter" public="false">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter" public="false">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="country.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="address.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="company.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="template.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="client.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="invoice.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="order.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="role.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="product.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="user.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="text.fixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id=".service_locator.RnpDE64"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ORM\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id=".service_locator.jiHemF9"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser" public="false"/>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>1024</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id=".2_HtmlDumper~KcRXeDe" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~KcRXeDe" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~KcRXeDe"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~KcRXeDe"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="liip_imagine.mime_types" class="Symfony\Component\Mime\MimeTypes">
      <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/public</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader" public="true">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" public="false">
          <argument type="collection">
            <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/public</argument>
          </argument>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="liip_imagine.factory.config.filter.argument.point" class="Liip\ImagineBundle\Factory\Config\Filter\Argument\PointFactory"/>
    <service id="liip_imagine.factory.config.filter.argument.size" class="Liip\ImagineBundle\Factory\Config\Filter\Argument\SizeFactory"/>
    <service id="liip_imagine.factory.config.stack" class="Liip\ImagineBundle\Factory\Config\StackFactory"/>
    <service id="liip_imagine.factory.config.filter.auto_rotate" class="Liip\ImagineBundle\Factory\Config\Filter\AutoRotateFactory"/>
    <service id="liip_imagine.factory.config.filter.background" class="Liip\ImagineBundle\Factory\Config\Filter\BackgroundFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.crop" class="Liip\ImagineBundle\Factory\Config\Filter\CropFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
      <argument type="service" id="liip_imagine.factory.config.filter.argument.point"/>
    </service>
    <service id="liip_imagine.factory.config.filter.downscale" class="Liip\ImagineBundle\Factory\Config\Filter\DownscaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.flip" class="Liip\ImagineBundle\Factory\Config\Filter\FlipFactory"/>
    <service id="liip_imagine.factory.config.filter.grayscale" class="Liip\ImagineBundle\Factory\Config\Filter\GrayscaleFactory"/>
    <service id="liip_imagine.factory.config.filter.interlace" class="Liip\ImagineBundle\Factory\Config\Filter\InterlaceFactory"/>
    <service id="liip_imagine.factory.config.filter.paste" class="Liip\ImagineBundle\Factory\Config\Filter\PasteFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.point"/>
    </service>
    <service id="liip_imagine.factory.config.filter.relative_resize" class="Liip\ImagineBundle\Factory\Config\Filter\RelativeResizeFactory"/>
    <service id="liip_imagine.factory.config.filter.resize" class="Liip\ImagineBundle\Factory\Config\Filter\ResizeFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.rotate" class="Liip\ImagineBundle\Factory\Config\Filter\RotateFactory"/>
    <service id="liip_imagine.factory.config.filter.scale" class="Liip\ImagineBundle\Factory\Config\Filter\ScaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.strip" class="Liip\ImagineBundle\Factory\Config\Filter\StripFactory"/>
    <service id="liip_imagine.factory.config.filter.thumbnail" class="Liip\ImagineBundle\Factory\Config\Filter\ThumbnailFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.upscale" class="Liip\ImagineBundle\Factory\Config\Filter\UpscaleFactory">
      <argument type="service" id="liip_imagine.factory.config.filter.argument.size"/>
    </service>
    <service id="liip_imagine.factory.config.filter.watermark" class="Liip\ImagineBundle\Factory\Config\Filter\WatermarkFactory"/>
    <service id="liip_imagine.config.filter_factory_collection" class="Liip\ImagineBundle\Config\FilterFactoryCollection">
      <argument type="service" id="liip_imagine.factory.config.filter.auto_rotate"/>
      <argument type="service" id="liip_imagine.factory.config.filter.background"/>
      <argument type="service" id="liip_imagine.factory.config.filter.crop"/>
      <argument type="service" id="liip_imagine.factory.config.filter.downscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.flip"/>
      <argument type="service" id="liip_imagine.factory.config.filter.grayscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.interlace"/>
      <argument type="service" id="liip_imagine.factory.config.filter.paste"/>
      <argument type="service" id="liip_imagine.factory.config.filter.relative_resize"/>
      <argument type="service" id="liip_imagine.factory.config.filter.resize"/>
      <argument type="service" id="liip_imagine.factory.config.filter.rotate"/>
      <argument type="service" id="liip_imagine.factory.config.filter.scale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.strip"/>
      <argument type="service" id="liip_imagine.factory.config.filter.thumbnail"/>
      <argument type="service" id="liip_imagine.factory.config.filter.upscale"/>
      <argument type="service" id="liip_imagine.factory.config.filter.watermark"/>
    </service>
    <service id="liip_imagine.config.stack_builder" class="Liip\ImagineBundle\Config\StackBuilder">
      <argument type="service" id="liip_imagine.factory.config.stack"/>
      <argument type="service" id="liip_imagine.config.filter_factory_collection"/>
    </service>
    <service id="liip_imagine.config.stack_collection" class="Liip\ImagineBundle\Config\StackCollection" public="true">
      <argument type="service" id="liip_imagine.config.stack_builder"/>
      <argument>%liip_imagine.filter_sets%</argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager" public="true">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>grayscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.grayscale"/>
      </call>
      <call method="addLoader">
        <argument>paste_image</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste_image"/>
      </call>
      <call method="addLoader">
        <argument>watermark_image</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark_image"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>scale</argument>
        <argument type="service" id="liip_imagine.filter.loader.scale"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>downscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.downscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>flip</argument>
        <argument type="service" id="liip_imagine.filter.loader.flip"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addLoader">
        <argument>resample</argument>
        <argument type="service" id="liip_imagine.filter.loader.resample"/>
      </call>
      <call method="addLoader">
        <argument>fixed</argument>
        <argument type="service" id="liip_imagine.filter.loader.fixed"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
      <call method="addPostProcessor">
        <argument>optipng</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.optipng"/>
      </call>
      <call method="addPostProcessor">
        <argument>pngquant</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.pngquant"/>
      </call>
      <call method="addPostProcessor">
        <argument>mozjpeg</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.mozjpeg"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager" public="true">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>default</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager" public="true">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>default</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument>%liip_imagine.filter_sets%</argument>
    </service>
    <service id="liip_imagine.service.filter" class="Liip\ImagineBundle\Service\FilterService">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="liip_imagine.controller.config" class="Liip\ImagineBundle\Config\Controller\ControllerConfig" public="false">
      <argument>301</argument>
    </service>
    <service id="Liip\ImagineBundle\Controller\ImagineController" class="Liip\ImagineBundle\Controller\ImagineController" public="true">
      <argument type="service" id="liip_imagine.service.filter"/>
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="liip_imagine.controller.config"/>
    </service>
    <service id="liip_imagine.meta_data.reader" class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
    <service id="liip_imagine.gd" class="Imagine\Gd\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.imagick" class="Imagine\Imagick\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.gmagick" class="Imagine\Gmagick\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.templating.filter_extension" class="Liip\ImagineBundle\Templating\FilterExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.grayscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="grayscale"/>
    </service>
    <service id="liip_imagine.filter.loader.paste_image" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste_image"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark_image" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark_image"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.scale" class="Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="scale"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.downscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="downscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.flip" class="Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="flip"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.filter.loader.resample" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="resample"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.filter.loader.fixed" class="Liip\ImagineBundle\Imagine\Filter\Loader\FixedFilterLoader" public="true">
      <tag name="liip_imagine.filter.loader" loader="fixed"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.flysystem" class="Liip\ImagineBundle\Binary\Loader\FlysystemLoader" abstract="true">
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.chain" class="Liip\ImagineBundle\Binary\Loader\ChainLoader" abstract="true">
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem" class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem_insecure" class="Liip\ImagineBundle\Binary\Locator\FileSystemInsecureLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" public="true" abstract="true">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.aws_s3" class="Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.cache" class="Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.flysystem" class="Liip\ImagineBundle\Imagine\Cache\Resolver\FlysystemResolver" public="true" abstract="true">
      <argument></argument>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.proxy" class="Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver" public="true">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service">
        <service class="Symfony\Component\Mime\MimeTypes">
          <factory class="Symfony\Component\Mime\MimeTypes" method="getDefault"/>
        </service>
      </argument>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer" public="true">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.optipng" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="optipng"/>
      <argument>/usr/bin/optipng</argument>
      <argument>7</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.pngquant" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="pngquant"/>
      <argument>/usr/bin/pngquant</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.mozjpeg" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="mozjpeg"/>
      <argument>/opt/mozjpeg/bin/cjpeg</argument>
    </service>
    <service id="liip_imagine.command.cache_remove" class="Liip\ImagineBundle\Command\RemoveCacheCommand">
      <tag name="console.command" command="liip:imagine:cache:remove" alias="imagine:del"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <call method="setName">
        <argument>liip:imagine:cache:remove</argument>
      </call>
    </service>
    <service id="liip_imagine.command.cache_resolve" class="Liip\ImagineBundle\Command\ResolveCacheCommand">
      <tag name="console.command" command="liip:imagine:cache:resolve" alias="imagine:get"/>
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <call method="setName">
        <argument>liip:imagine:cache:resolve</argument>
      </call>
    </service>
    <service id="liip_imagine.templating.filter_helper" class="Liip\ImagineBundle\Templating\Helper\FilterHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <deprecated>The "%service_id%" service is deprecated since LiipImagineBundle 2.2 and will be removed in 3.0.</deprecated>
    </service>
    <service id="gesdinet.jwtrefreshtoken.send_token" class="Gesdinet\JWTRefreshTokenBundle\EventListener\AttachRefreshTokenOnSuccessListener">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="attachRefreshToken"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>28800</argument>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="request_stack"/>
      <argument>username</argument>
      <argument>refresh_token</argument>
      <argument>false</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.refresh_token_manager" class="Gesdinet\JWTRefreshTokenBundle\Doctrine\RefreshTokenManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken" class="Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken" public="true">
      <argument type="service" id="gesdinet.jwtrefreshtoken.authenticator"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.user_provider"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>28800</argument>
      <argument>refresh</argument>
      <argument>true</argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.user_provider" class="Gesdinet\JWTRefreshTokenBundle\Security\Provider\RefreshTokenProvider">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setCustomUserProvider">
        <argument type="service" id="security.user.provider.concrete.client_provider" on-invalid="null"/>
      </call>
    </service>
    <service id="gesdinet.jwtrefreshtoken.authenticator" class="Gesdinet\JWTRefreshTokenBundle\Security\Authenticator\RefreshTokenAuthenticator">
      <argument type="service" id="security.user_checker"/>
      <argument>refresh_token</argument>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand">
      <tag name="console.command"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:clear</argument>
      </call>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand">
      <tag name="console.command"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:revoke</argument>
      </call>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~Ht1rMWk" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~Ht1rMWk" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~Ht1rMWk" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~Ht1rMWk" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~Ht1rMWk"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~Ht1rMWk"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~Ht1rMWk"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~Ht1rMWk"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">smtp</argument>
        <argument key="url">%env(MAILER_URL)%</argument>
        <argument key="username">null</argument>
        <argument key="password">null</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">null</argument>
        <argument key="command">/usr/sbin/sendmail -bs</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.local" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\LocalFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.nulladapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\NullAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.zip" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ZipFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v2" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V2Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.awss3v3" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AwsS3V3Factory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.azureblob" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\AzureBlobFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.dropbox" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\DropboxFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.googlecloudstorage" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GoogleCloudStorageFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.rackspace" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\RackspaceFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.webdav" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\WebDavFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.ftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FtpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.sftp" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\SftpFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gridfs" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GridFSFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.customadapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\CustomAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\MemoryAdapterFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.fallback" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\FallbackFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.gaufrette" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\GaufretteFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.adapter_factory.replicate" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Adapter\ReplicateFactory">
      <tag name="oneup_flysystem.adapter_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.adapter" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\AdapterFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memory" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemoryFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.noop" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\NoopFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.memcached" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\MemcachedFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.php_redis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PhpRedisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.predis" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\PredisFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.stash" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\StashFactory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.cache_factory.psr6" class="Oneup\FlysystemBundle\DependencyInjection\Factory\Cache\Psr6Factory">
      <tag name="oneup_flysystem.cache_factory"/>
    </service>
    <service id="oneup_flysystem.adapter.local" class="League\Flysystem\Adapter\Local" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.cached" class="League\Flysystem\Cached\CachedAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.nulladapter" class="League\Flysystem\Adapter\NullAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.memory" class="League\Flysystem\Memory\MemoryAdapter" public="false" abstract="true"/>
    <service id="oneup_flysystem.adapter.zip" class="League\Flysystem\ZipArchive\ZipArchiveAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v2" class="League\Flysystem\AwsS3v2\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.awss3v3" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.azureblob" class="League\Flysystem\AzureBlobStorage\AzureBlobStorageAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.dropbox" class="Spatie\FlysystemDropbox\DropboxAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.googlecloudstorage" class="Superbalist\Flysystem\GoogleStorage\GoogleStorageAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.rackspace" class="League\Flysystem\Rackspace\RackspaceAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.webdav" class="League\Flysystem\WebDAV\WebDAVAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.ftp" class="League\Flysystem\Adapter\Ftp" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.sftp" class="League\Flysystem\Sftp\SftpAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gridfs" class="League\Flysystem\GridFS\GridFSAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.fallback" class="Litipk\Flysystem\Fallback\FallbackAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.gaufrette" class="Jenko\Flysystem\GaufretteAdapter" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="oneup_flysystem.adapter.replicate" class="League\Flysystem\Replicate\ReplicateAdapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.mount_manager" class="League\Flysystem\MountManager" public="true">
      <call method="mountFilesystem">
        <argument>file_filesystem</argument>
        <argument type="service" id="oneup_flysystem.file_filesystem_filesystem"/>
      </call>
      <call method="mountFilesystem">
        <argument>image_filesystem</argument>
        <argument type="service" id="oneup_flysystem.image_filesystem_filesystem"/>
      </call>
    </service>
    <service id="oneup_flysystem.filesystem" class="League\Flysystem\Filesystem" public="true" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.adapter" class="League\Flysystem\Cached\Storage\Adapter" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.memory" class="League\Flysystem\Cached\Storage\Memory" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.noop" class="League\Flysystem\Cached\Storage\Noop" public="false" abstract="true"/>
    <service id="oneup_flysystem.cache.memcached" class="League\Flysystem\Cached\Storage\Memcached" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.predis" class="League\Flysystem\Cached\Storage\Predis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.php_redis" class="League\Flysystem\Cached\Storage\PhpRedis" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.stash" class="League\Flysystem\Cached\Storage\Stash" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.cache.psr6" class="League\Flysystem\Cached\Storage\Psr6Cache" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="oneup_flysystem.plugin.empty_dir" class="League\Flysystem\Plugin\EmptyDir"/>
    <service id="oneup_flysystem.plugin.get_with_metadata" class="League\Flysystem\Plugin\GetWithMetadata"/>
    <service id="oneup_flysystem.plugin.list_files" class="League\Flysystem\Plugin\ListFiles"/>
    <service id="oneup_flysystem.plugin.list_paths" class="League\Flysystem\Plugin\ListPaths"/>
    <service id="oneup_flysystem.plugin.list_with" class="League\Flysystem\Plugin\ListWith"/>
    <service id="oneup_flysystem.file_adapter_adapter" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false">
      <argument type="service" id="app.s3_client"/>
      <argument>%env(AWS_S3_BUCKET_FILE_NAME)%</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="oneup_flysystem.image_adapter_adapter" class="League\Flysystem\AwsS3v3\AwsS3Adapter" public="false">
      <argument type="service" id="app.s3_client"/>
      <argument>%env(AWS_S3_BUCKET_IMAGE_NAME)%</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="oneup_flysystem.file_filesystem_filesystem" class="League\Flysystem\Filesystem" public="true">
      <tag name="oneup_flysystem.filesystem" key="file_filesystem" mount="file_filesystem"/>
      <argument type="service" id="oneup_flysystem.file_adapter_adapter"/>
      <argument type="collection">
        <argument key="visibility">public</argument>
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="oneup_flysystem.image_filesystem_filesystem" class="League\Flysystem\Filesystem" public="true">
      <tag name="oneup_flysystem.filesystem" key="image_filesystem" mount="image_filesystem"/>
      <argument type="service" id="oneup_flysystem.image_adapter_adapter"/>
      <argument type="collection">
        <argument key="visibility">public</argument>
        <argument key="disable_asserts">false</argument>
      </argument>
    </service>
    <service id="stof_doctrine_extensions.listener.timestampable" class="Gedmo\Timestampable\TimestampableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.blameable" class="Gedmo\Blameable\BlameableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.event_listener.blame" class="Stof\DoctrineExtensionsBundle\EventListener\BlameListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="stof_doctrine_extensions.listener.blameable"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="stof_doctrine_extensions.listener.sluggable" class="Gedmo\Sluggable\SluggableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor" public="false"/>
    <service id="twig.extension.cssinliner" class="Twig\Extra\CssInliner\CssInlinerExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.inky" class="Twig\Extra\Inky\InkyExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="number">exact</argument>
        <argument key="company.name">ipartial</argument>
        <argument key="status.name">ipartial</argument>
        <argument key="currency.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="number">null</argument>
        <argument key="company.name">null</argument>
        <argument key="status.name">null</argument>
        <argument key="currency.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="opportunity">ipartial</argument>
        <argument key="status.id">exact</argument>
        <argument key="type.id">exact</argument>
        <argument key="client.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="opportunity">null</argument>
        <argument key="status.id">null</argument>
        <argument key="type.id">null</argument>
        <argument key="clientname">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="parent.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="parent.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_sell_price_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="translations.name">ipartial</argument>
        <argument key="translations.parent.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_category_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="translations.name">null</argument>
        <argument key="translations.parent.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">partial</argument>
        <argument key="client">partial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_document_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="client">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_stock_line_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_opportunity_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_group_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="ean">ipartial</argument>
        <argument key="category.id">exact</argument>
        <argument key="category.name">ipartial</argument>
        <argument key="brand.name">ipartial</argument>
        <argument key="translations.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="translations.name">null</argument>
        <argument key="ean">null</argument>
        <argument key="category.translations.name">null</argument>
        <argument key="brand.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_payment_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_country_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="postCode">ipartial</argument>
        <argument key="country.name">ipartial</argument>
        <argument key="city">ipartial</argument>
        <argument key="region">ipartial</argument>
        <argument key="district">ipartial</argument>
        <argument key="street">ipartial</argument>
        <argument key="building">ipartial</argument>
        <argument key="apartment">ipartial</argument>
        <argument key="comment">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_address_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="postCode">null</argument>
        <argument key="country.name">null</argument>
        <argument key="city">null</argument>
        <argument key="region">null</argument>
        <argument key="district">null</argument>
        <argument key="street">null</argument>
        <argument key="building">null</argument>
        <argument key="apartment">null</argument>
        <argument key="comment">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="country.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_label_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="country.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="number">exact</argument>
        <argument key="company.name">ipartial</argument>
        <argument key="status.name">ipartial</argument>
        <argument key="currency.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="number">null</argument>
        <argument key="company.name">null</argument>
        <argument key="status.name">null</argument>
        <argument key="currency.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_purchase_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="email">ipartial</argument>
        <argument key="groups.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_user_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="email">null</argument>
        <argument key="groups.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_role_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="number">exact</argument>
        <argument key="client.name">ipartial</argument>
        <argument key="status.name">ipartial</argument>
        <argument key="currency.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="number">null</argument>
        <argument key="client.name">null</argument>
        <argument key="status.name">null</argument>
        <argument key="currency.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_product_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="contacts.value">ipartial</argument>
        <argument key="labels.id">exact</argument>
        <argument key="addresses.country.name">ipartial</argument>
        <argument key="addresses.city.name">ipartial</argument>
        <argument key="addresses.postCode">ipartial</argument>
        <argument key="contactPerson">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_division_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="contactPerson">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="value">exact</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_vat_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="value">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="deadline">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="status.id">exact</argument>
        <argument key="project.name">ipartial</argument>
        <argument key="project.client.name">ipartial</argument>
        <argument key="opportunitu.name">ipartial</argument>
        <argument key="opportunity.client.name">ipartial</argument>
        <argument key="assignee.name">ipartial</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_task_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="status.id">null</argument>
        <argument key="project.name">null</argument>
        <argument key="project.client.name">null</argument>
        <argument key="opportunitu.name">null</argument>
        <argument key="opportunity.client.name">null</argument>
        <argument key="assignee.name">null</argument>
        <argument key="name">null</argument>
        <argument key="timeEstimated">null</argument>
        <argument key="timeSpent">null</argument>
        <argument key="deadline">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="value">ipartial</argument>
        <argument key="contactType.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_contact_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="value">null</argument>
        <argument key="contactType.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="status.id">exact</argument>
        <argument key="type.id">exact</argument>
        <argument key="client.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_project_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="status.id">null</argument>
        <argument key="type.id">null</argument>
        <argument key="clientname">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="loggedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="action">ipartial</argument>
        <argument key="objectId">ipartial</argument>
        <argument key="objectClass">ipartial</argument>
        <argument key="username">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_history_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="action">null</argument>
        <argument key="objectId">null</argument>
        <argument key="objectClass">null</argument>
        <argument key="username">null</argument>
        <argument key="loggedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="krs">ipartial</argument>
        <argument key="nip">ipartial</argument>
        <argument key="contacts.value">ipartial</argument>
        <argument key="labels.id">exact</argument>
        <argument key="division.id">ipartial</argument>
        <argument key="division.name">ipartial</argument>
        <argument key="opportunity.id">ipartial</argument>
        <argument key="opportunity.name">ipartial</argument>
        <argument key="addresses.country.name">ipartial</argument>
        <argument key="addresses.city.name">ipartial</argument>
        <argument key="addresses.postCode">ipartial</argument>
        <argument key="contactPerson">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_company_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="contactPerson">null</argument>
        <argument key="division">null</argument>
        <argument key="krs">null</argument>
        <argument key="nip">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_product_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_module_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipment_method_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_deal_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="currency.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_channel_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="currency.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_shipping_notice_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_header_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="code">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_currency_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="code">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="code">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_language_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="code">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_warehouse_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="type.name">ipartial</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="type.name">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="title">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_translation_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_invoice_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_template_type_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="country.name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_brand_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="country.name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="translations.title">ipartial</argument>
        <argument key="slug">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_text_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="translations.title">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
        <argument key="labels.id">exact</argument>
        <argument key="contacts.value">ipartial</argument>
        <argument key="description">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_client_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="description">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">exact</argument>
        <argument key="name">ipartial</argument>
      </argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="annotated_app_entity_order_line_status_api_platform_core_bridge_doctrine_orm_filter_order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" autowire="true">
      <tag name="api_platform.filter"/>
      <argument type="service" id="doctrine"/>
      <argument>null</argument>
      <argument>order</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="id">null</argument>
        <argument key="name">null</argument>
        <argument key="createdAt">null</argument>
        <argument key="updatedAt">null</argument>
      </argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ElasticaIndexProductCommand" class="App\Command\ElasticaIndexProductCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ElasticaIndexProductCommand" class="App\Command\ElasticaIndexProductCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ElasticaIndexSearchCommand" class="App\Command\ElasticaIndexSearchCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ElasticaIndexSearchCommand" class="App\Command\ElasticaIndexSearchCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\GoogleAuthCommand" class="App\Command\GoogleAuthCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\GoogleAuthCommand" class="App\Command\GoogleAuthCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Client\ClientPutItemController" class="App\Controller\Client\ClientPutItemController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Client\ClientPutItemController" class="App\Controller\Client\ClientPutItemController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Client\ClientPutItemController" class="App\Controller\Client\ClientPutItemController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Client\ClientRemindPasswordCollectionController" class="App\Controller\Client\ClientRemindPasswordCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Client\ClientRemindPasswordCollectionController" class="App\Controller\Client\ClientRemindPasswordCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Client\ClientRemindPasswordCollectionController" class="App\Controller\Client\ClientRemindPasswordCollectionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Client\ClientSignupPostCollectionController" class="App\Controller\Client\ClientSignupPostCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Client\ClientSignupPostCollectionController" class="App\Controller\Client\ClientSignupPostCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Client\ClientSignupPostCollectionController" class="App\Controller\Client\ClientSignupPostCollectionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DownloadFileAction" class="App\Controller\DownloadFileAction" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DownloadFileAction" class="App\Controller\DownloadFileAction" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DownloadFileAction" class="App\Controller\DownloadFileAction" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Opportunity\OpportunityNotification" class="App\Controller\Opportunity\OpportunityNotification" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Opportunity\OpportunityNotification" class="App\Controller\Opportunity\OpportunityNotification" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Opportunity\OpportunityNotification" class="App\Controller\Opportunity\OpportunityNotification" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\UserPostCollectionController" class="App\Controller\User\UserPostCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\UserPostCollectionController" class="App\Controller\User\UserPostCollectionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\UserPostCollectionController" class="App\Controller\User\UserPostCollectionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\UserPutItemController" class="App\Controller\User\UserPutItemController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\UserPutItemController" class="App\Controller\User\UserPutItemController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\UserPutItemController" class="App\Controller\User\UserPutItemController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\FileType" class="App\Form\FileType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\FileType" class="App\Form\FileType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\ImageType" class="App\Form\ImageType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\ImageType" class="App\Form\ImageType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AddressRepository" class="App\Repository\AddressRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AddressRepository" class="App\Repository\AddressRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\BrandRepository" class="App\Repository\BrandRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\BrandRepository" class="App\Repository\BrandRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CategoryRepository" class="App\Repository\CategoryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CategoryRepository" class="App\Repository\CategoryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CategoryTranslationRepository" class="App\Repository\CategoryTranslationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CategoryTranslationRepository" class="App\Repository\CategoryTranslationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ChannelRepository" class="App\Repository\ChannelRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ChannelRepository" class="App\Repository\ChannelRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ClientRepository" class="App\Repository\ClientRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ClientRepository" class="App\Repository\ClientRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CompanyProductRepository" class="App\Repository\CompanyProductRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CompanyProductRepository" class="App\Repository\CompanyProductRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CompanyRepository" class="App\Repository\CompanyRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CompanyRepository" class="App\Repository\CompanyRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContactRepository" class="App\Repository\ContactRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContactRepository" class="App\Repository\ContactRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContactTypeRepository" class="App\Repository\ContactTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContactTypeRepository" class="App\Repository\ContactTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CountryRepository" class="App\Repository\CountryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CountryRepository" class="App\Repository\CountryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CurrencyRepository" class="App\Repository\CurrencyRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CurrencyRepository" class="App\Repository\CurrencyRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DealTypeRepository" class="App\Repository\DealTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DealTypeRepository" class="App\Repository\DealTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DivisionRepository" class="App\Repository\DivisionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DivisionRepository" class="App\Repository\DivisionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\DocumentRepository" class="App\Repository\DocumentRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\GroupRepository" class="App\Repository\GroupRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\GroupRepository" class="App\Repository\GroupRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\HistoryRepository" class="App\Repository\HistoryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\HistoryRepository" class="App\Repository\HistoryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceHeaderRepository" class="App\Repository\InvoiceHeaderRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceHeaderRepository" class="App\Repository\InvoiceHeaderRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceLineRepository" class="App\Repository\InvoiceLineRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceLineRepository" class="App\Repository\InvoiceLineRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceStatusRepository" class="App\Repository\InvoiceStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceStatusRepository" class="App\Repository\InvoiceStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\InvoiceTypeRepository" class="App\Repository\InvoiceTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\InvoiceTypeRepository" class="App\Repository\InvoiceTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LabelRepository" class="App\Repository\LabelRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LabelRepository" class="App\Repository\LabelRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LanguageRepository" class="App\Repository\LanguageRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LanguageRepository" class="App\Repository\LanguageRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ModuleRepository" class="App\Repository\ModuleRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ModuleRepository" class="App\Repository\ModuleRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OpportunityRepository" class="App\Repository\OpportunityRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OpportunityRepository" class="App\Repository\OpportunityRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OpportunityStatusRepository" class="App\Repository\OpportunityStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OpportunityStatusRepository" class="App\Repository\OpportunityStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OrderHeaderRepository" class="App\Repository\OrderHeaderRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OrderHeaderRepository" class="App\Repository\OrderHeaderRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OrderLineRepository" class="App\Repository\OrderLineRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OrderLineRepository" class="App\Repository\OrderLineRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OrderLineStatusRepository" class="App\Repository\OrderLineStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OrderLineStatusRepository" class="App\Repository\OrderLineStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\OrderStatusRepository" class="App\Repository\OrderStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\OrderStatusRepository" class="App\Repository\OrderStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PaymentTypeRepository" class="App\Repository\PaymentTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PaymentTypeRepository" class="App\Repository\PaymentTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProductRepository" class="App\Repository\ProductRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProductRepository" class="App\Repository\ProductRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProductSellPriceRepository" class="App\Repository\ProductSellPriceRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProductSellPriceRepository" class="App\Repository\ProductSellPriceRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProductTranslationRepository" class="App\Repository\ProductTranslationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProductTranslationRepository" class="App\Repository\ProductTranslationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectRepository" class="App\Repository\ProjectRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectStatusRepository" class="App\Repository\ProjectStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectStatusRepository" class="App\Repository\ProjectStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProjectTypeRepository" class="App\Repository\ProjectTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProjectTypeRepository" class="App\Repository\ProjectTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PurchaseOrderHeaderRepository" class="App\Repository\PurchaseOrderHeaderRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PurchaseOrderHeaderRepository" class="App\Repository\PurchaseOrderHeaderRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PurchaseOrderLineRepository" class="App\Repository\PurchaseOrderLineRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PurchaseOrderLineRepository" class="App\Repository\PurchaseOrderLineRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PurchaseOrderLineStatusRepository" class="App\Repository\PurchaseOrderLineStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PurchaseOrderLineStatusRepository" class="App\Repository\PurchaseOrderLineStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PurchaseOrderStatusRepository" class="App\Repository\PurchaseOrderStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PurchaseOrderStatusRepository" class="App\Repository\PurchaseOrderStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RoleRepository" class="App\Repository\RoleRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RoleRepository" class="App\Repository\RoleRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShipmentMethodRepository" class="App\Repository\ShipmentMethodRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShipmentMethodRepository" class="App\Repository\ShipmentMethodRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShippingNoticeHeaderRepository" class="App\Repository\ShippingNoticeHeaderRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShippingNoticeHeaderRepository" class="App\Repository\ShippingNoticeHeaderRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShippingNoticeLineRepository" class="App\Repository\ShippingNoticeLineRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShippingNoticeLineRepository" class="App\Repository\ShippingNoticeLineRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShippingNoticeLineStatusRepository" class="App\Repository\ShippingNoticeLineStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShippingNoticeLineStatusRepository" class="App\Repository\ShippingNoticeLineStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ShippingNoticeStatusRepository" class="App\Repository\ShippingNoticeStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ShippingNoticeStatusRepository" class="App\Repository\ShippingNoticeStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\StockLineRepository" class="App\Repository\StockLineRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\StockLineRepository" class="App\Repository\StockLineRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\StockLineStatusRepository" class="App\Repository\StockLineStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\StockLineStatusRepository" class="App\Repository\StockLineStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskRepository" class="App\Repository\TaskRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TaskStatusRepository" class="App\Repository\TaskStatusRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TaskStatusRepository" class="App\Repository\TaskStatusRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TemplateRepository" class="App\Repository\TemplateRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TemplateTypeRepository" class="App\Repository\TemplateTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TemplateTypeRepository" class="App\Repository\TemplateTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TextRepository" class="App\Repository\TextRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TextRepository" class="App\Repository\TextRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TextTranslationRepository" class="App\Repository\TextTranslationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TextTranslationRepository" class="App\Repository\TextTranslationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\VatRepository" class="App\Repository\VatRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\VatRepository" class="App\Repository\VatRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\WarehouseRepository" class="App\Repository\WarehouseRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\WarehouseRepository" class="App\Repository\WarehouseRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.ApiPlatform\Core\DataProvider\CollectionDataProviderInterface.0.App\Service\DataProvider\ProductCollectionDataProvider" class="App\Service\DataProvider\ProductCollectionDataProvider" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Service\DataProvider\ProductCollectionDataProvider" class="App\Service\DataProvider\ProductCollectionDataProvider" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.ApiPlatform\Core\DataProvider\CollectionDataProviderInterface.0.App\Service\DataProvider\SearchCollectionDataProvider" class="App\Service\DataProvider\SearchCollectionDataProvider" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Service\DataProvider\SearchCollectionDataProvider" class="App\Service\DataProvider\SearchCollectionDataProvider" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.App\Service\Normalizer\ElasticaCollectionNormalizer" class="App\Service\Normalizer\ElasticaCollectionNormalizer" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Service\Normalizer\ElasticaCollectionNormalizer" class="App\Service\Normalizer\ElasticaCollectionNormalizer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.App\Service\Normalizer\ElasticaItemNormalizer" class="App\Service\Normalizer\ElasticaItemNormalizer" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Service\Normalizer\ElasticaItemNormalizer" class="App\Service\Normalizer\ElasticaItemNormalizer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.DM4PjFp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categoryRepository" type="service" id="App\Repository\CategoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.ZW1lj7w" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="categoryTranslationRepository" type="service" id="App\Repository\CategoryTranslationRepository"/>
      </argument>
    </service>
    <service id=".service_locator.I._eZQe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="client" type="service" id=".errored..service_locator.I._eZQe.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.k_CFoud" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authenticationSuccessHandler" type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
        <argument key="clientRepository" type="service" id="App\Repository\ClientRepository"/>
      </argument>
    </service>
    <service id=".service_locator.DPdmpKe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="data" type="service" id=".errored..service_locator.DPdmpKe.Symfony\Component\Security\Core\User\UserInterface"/>
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="validator" type="service" id="api_platform.validator"/>
      </argument>
    </service>
    <service id=".service_locator.S_RMmSs" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="clientRepository" type="service" id="App\Repository\ClientRepository"/>
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="mailer" type="service" id="swiftmailer.mailer.default"/>
        <argument key="params" type="service" id="parameter_bag"/>
        <argument key="validator" type="service" id="api_platform.validator"/>
      </argument>
    </service>
    <service id=".service_locator.TAz2alH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="data" type="service" id=".errored..service_locator.TAz2alH.App\Entity\Client"/>
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="mailer" type="service" id="swiftmailer.mailer.default"/>
        <argument key="params" type="service" id="parameter_bag"/>
        <argument key="validator" type="service" id="api_platform.validator"/>
      </argument>
    </service>
    <service id=".service_locator.8ww7YMj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="file" type="service" id=".errored..service_locator.8ww7YMj.App\Entity\File"/>
      </argument>
    </service>
    <service id=".service_locator.rbvsq4D" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="em" type="service" id="doctrine.orm.default_entity_manager"/>
        <argument key="historyRepository" type="service" id="App\Repository\HistoryRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Xqs7AOo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="opportunity" type="service" id=".errored..service_locator.Xqs7AOo.App\Entity\Opportunity"/>
      </argument>
    </service>
    <service id=".service_locator.Ghn1.s8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="search" type="service" id="App\Service\Elastica\Client\ElasticaClientSearch"/>
      </argument>
    </service>
    <service id=".service_locator..k1eVmS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="textRepository" type="service" id="App\Repository\TextRepository"/>
      </argument>
    </service>
    <service id=".service_locator.5kT8q.7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="data" type="service" id=".errored..service_locator.5kT8q.7.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.bhurMHC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\Category\CategoryFrontendGetCollectionAction::__invoke" type="service" id=".service_locator.DM4PjFp"/>
        <argument key="App\Controller\Category\CategoryFrontendGetItemAction::__invoke" type="service" id=".service_locator.ZW1lj7w"/>
        <argument key="App\Controller\Client\ClientGetItemAction::__invoke" type="service" id=".service_locator.I._eZQe"/>
        <argument key="App\Controller\Client\ClientLoginByTokenCollectionAction::__invoke" type="service" id=".service_locator.k_CFoud"/>
        <argument key="App\Controller\Client\ClientPutItemController::__invoke" type="service" id=".service_locator.DPdmpKe"/>
        <argument key="App\Controller\Client\ClientRemindPasswordCollectionController::__invoke" type="service" id=".service_locator.S_RMmSs"/>
        <argument key="App\Controller\Client\ClientSignupPostCollectionController::__invoke" type="service" id=".service_locator.TAz2alH"/>
        <argument key="App\Controller\DownloadFileAction::indexAction" type="service" id=".service_locator.8ww7YMj"/>
        <argument key="App\Controller\History\HistoryGetEntityCollectionAction::__invoke" type="service" id=".service_locator.rbvsq4D"/>
        <argument key="App\Controller\Opportunity\OpportunityNotification::createNotification" type="service" id=".service_locator.Xqs7AOo"/>
        <argument key="App\Controller\SearchAction::__invoke" type="service" id=".service_locator.Ghn1.s8"/>
        <argument key="App\Controller\Text\TextFrontendGetItemAction::__invoke" type="service" id=".service_locator..k1eVmS"/>
        <argument key="App\Controller\User\UserPostCollectionController::__invoke" type="service" id=".service_locator.5kT8q.7"/>
        <argument key="App\Controller\User\UserPutItemController::__invoke" type="service" id=".service_locator.5kT8q.7"/>
        <argument key="App\Controller\Category\CategoryFrontendGetCollectionAction:__invoke" type="service" id=".service_locator.DM4PjFp"/>
        <argument key="App\Controller\Category\CategoryFrontendGetCollectionAction" type="service" id=".service_locator.DM4PjFp"/>
        <argument key="App\Controller\Category\CategoryFrontendGetItemAction:__invoke" type="service" id=".service_locator.ZW1lj7w"/>
        <argument key="App\Controller\Category\CategoryFrontendGetItemAction" type="service" id=".service_locator.ZW1lj7w"/>
        <argument key="App\Controller\Client\ClientGetItemAction:__invoke" type="service" id=".service_locator.I._eZQe"/>
        <argument key="App\Controller\Client\ClientGetItemAction" type="service" id=".service_locator.I._eZQe"/>
        <argument key="App\Controller\Client\ClientLoginByTokenCollectionAction:__invoke" type="service" id=".service_locator.k_CFoud"/>
        <argument key="App\Controller\Client\ClientLoginByTokenCollectionAction" type="service" id=".service_locator.k_CFoud"/>
        <argument key="App\Controller\Client\ClientPutItemController:__invoke" type="service" id=".service_locator.DPdmpKe"/>
        <argument key="App\Controller\Client\ClientPutItemController" type="service" id=".service_locator.DPdmpKe"/>
        <argument key="App\Controller\Client\ClientRemindPasswordCollectionController:__invoke" type="service" id=".service_locator.S_RMmSs"/>
        <argument key="App\Controller\Client\ClientRemindPasswordCollectionController" type="service" id=".service_locator.S_RMmSs"/>
        <argument key="App\Controller\Client\ClientSignupPostCollectionController:__invoke" type="service" id=".service_locator.TAz2alH"/>
        <argument key="App\Controller\Client\ClientSignupPostCollectionController" type="service" id=".service_locator.TAz2alH"/>
        <argument key="App\Controller\DownloadFileAction:indexAction" type="service" id=".service_locator.8ww7YMj"/>
        <argument key="App\Controller\History\HistoryGetEntityCollectionAction:__invoke" type="service" id=".service_locator.rbvsq4D"/>
        <argument key="App\Controller\History\HistoryGetEntityCollectionAction" type="service" id=".service_locator.rbvsq4D"/>
        <argument key="App\Controller\Opportunity\OpportunityNotification:createNotification" type="service" id=".service_locator.Xqs7AOo"/>
        <argument key="App\Controller\SearchAction:__invoke" type="service" id=".service_locator.Ghn1.s8"/>
        <argument key="App\Controller\SearchAction" type="service" id=".service_locator.Ghn1.s8"/>
        <argument key="App\Controller\Text\TextFrontendGetItemAction:__invoke" type="service" id=".service_locator..k1eVmS"/>
        <argument key="App\Controller\Text\TextFrontendGetItemAction" type="service" id=".service_locator..k1eVmS"/>
        <argument key="App\Controller\User\UserPostCollectionController:__invoke" type="service" id=".service_locator.5kT8q.7"/>
        <argument key="App\Controller\User\UserPostCollectionController" type="service" id=".service_locator.5kT8q.7"/>
        <argument key="App\Controller\User\UserPutItemController:__invoke" type="service" id=".service_locator.5kT8q.7"/>
        <argument key="App\Controller\User\UserPutItemController" type="service" id=".service_locator.5kT8q.7"/>
      </argument>
    </service>
    <service id=".service_locator.Y7gDuDN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.xslnwHz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\FileType" type="service" id="App\Form\FileType"/>
        <argument key="App\Form\ImageType" type="service" id="App\Form\ImageType"/>
        <argument key="Liip\ImagineBundle\Form\Type\ImageType" type="service" id="liip_imagine.form.type.image"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichFileType" type="service" id="vich_uploader.form.type.file"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichImageType" type="service" id="vich_uploader.form.type.image"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id=".service_locator.unKn8Zf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\EventListener\EntityRemoveListener" type="service" id="App\EventListener\EntityRemoveListener"/>
        <argument key="app.elastica.listener.product.index" type="service" id="app.elastica.listener.product.index"/>
        <argument key="app.elastica.listener.search.index" type="service" id="app.elastica.listener.search.index"/>
        <argument key="app.elastica.listener.task" type="service" id="app.elastica.listener.task"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.OvoqNwA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AddressRepository" type="service" id="App\Repository\AddressRepository"/>
        <argument key="App\Repository\BrandRepository" type="service" id="App\Repository\BrandRepository"/>
        <argument key="App\Repository\CategoryRepository" type="service" id="App\Repository\CategoryRepository"/>
        <argument key="App\Repository\CategoryTranslationRepository" type="service" id="App\Repository\CategoryTranslationRepository"/>
        <argument key="App\Repository\ChannelRepository" type="service" id="App\Repository\ChannelRepository"/>
        <argument key="App\Repository\ClientRepository" type="service" id="App\Repository\ClientRepository"/>
        <argument key="App\Repository\CompanyProductRepository" type="service" id="App\Repository\CompanyProductRepository"/>
        <argument key="App\Repository\CompanyRepository" type="service" id="App\Repository\CompanyRepository"/>
        <argument key="App\Repository\ContactRepository" type="service" id="App\Repository\ContactRepository"/>
        <argument key="App\Repository\ContactTypeRepository" type="service" id="App\Repository\ContactTypeRepository"/>
        <argument key="App\Repository\CountryRepository" type="service" id="App\Repository\CountryRepository"/>
        <argument key="App\Repository\CurrencyRepository" type="service" id="App\Repository\CurrencyRepository"/>
        <argument key="App\Repository\DealTypeRepository" type="service" id="App\Repository\DealTypeRepository"/>
        <argument key="App\Repository\DivisionRepository" type="service" id="App\Repository\DivisionRepository"/>
        <argument key="App\Repository\DocumentRepository" type="service" id="App\Repository\DocumentRepository"/>
        <argument key="App\Repository\GroupRepository" type="service" id="App\Repository\GroupRepository"/>
        <argument key="App\Repository\HistoryRepository" type="service" id="App\Repository\HistoryRepository"/>
        <argument key="App\Repository\InvoiceHeaderRepository" type="service" id="App\Repository\InvoiceHeaderRepository"/>
        <argument key="App\Repository\InvoiceLineRepository" type="service" id="App\Repository\InvoiceLineRepository"/>
        <argument key="App\Repository\InvoiceStatusRepository" type="service" id="App\Repository\InvoiceStatusRepository"/>
        <argument key="App\Repository\InvoiceTypeRepository" type="service" id="App\Repository\InvoiceTypeRepository"/>
        <argument key="App\Repository\LabelRepository" type="service" id="App\Repository\LabelRepository"/>
        <argument key="App\Repository\LanguageRepository" type="service" id="App\Repository\LanguageRepository"/>
        <argument key="App\Repository\ModuleRepository" type="service" id="App\Repository\ModuleRepository"/>
        <argument key="App\Repository\OpportunityRepository" type="service" id="App\Repository\OpportunityRepository"/>
        <argument key="App\Repository\OpportunityStatusRepository" type="service" id="App\Repository\OpportunityStatusRepository"/>
        <argument key="App\Repository\OrderHeaderRepository" type="service" id="App\Repository\OrderHeaderRepository"/>
        <argument key="App\Repository\OrderLineRepository" type="service" id="App\Repository\OrderLineRepository"/>
        <argument key="App\Repository\OrderLineStatusRepository" type="service" id="App\Repository\OrderLineStatusRepository"/>
        <argument key="App\Repository\OrderStatusRepository" type="service" id="App\Repository\OrderStatusRepository"/>
        <argument key="App\Repository\PaymentTypeRepository" type="service" id="App\Repository\PaymentTypeRepository"/>
        <argument key="App\Repository\ProductRepository" type="service" id="App\Repository\ProductRepository"/>
        <argument key="App\Repository\ProductSellPriceRepository" type="service" id="App\Repository\ProductSellPriceRepository"/>
        <argument key="App\Repository\ProductTranslationRepository" type="service" id="App\Repository\ProductTranslationRepository"/>
        <argument key="App\Repository\ProjectRepository" type="service" id="App\Repository\ProjectRepository"/>
        <argument key="App\Repository\ProjectStatusRepository" type="service" id="App\Repository\ProjectStatusRepository"/>
        <argument key="App\Repository\ProjectTypeRepository" type="service" id="App\Repository\ProjectTypeRepository"/>
        <argument key="App\Repository\PurchaseOrderHeaderRepository" type="service" id="App\Repository\PurchaseOrderHeaderRepository"/>
        <argument key="App\Repository\PurchaseOrderLineRepository" type="service" id="App\Repository\PurchaseOrderLineRepository"/>
        <argument key="App\Repository\PurchaseOrderLineStatusRepository" type="service" id="App\Repository\PurchaseOrderLineStatusRepository"/>
        <argument key="App\Repository\PurchaseOrderStatusRepository" type="service" id="App\Repository\PurchaseOrderStatusRepository"/>
        <argument key="App\Repository\RoleRepository" type="service" id="App\Repository\RoleRepository"/>
        <argument key="App\Repository\ShipmentMethodRepository" type="service" id="App\Repository\ShipmentMethodRepository"/>
        <argument key="App\Repository\ShippingNoticeHeaderRepository" type="service" id="App\Repository\ShippingNoticeHeaderRepository"/>
        <argument key="App\Repository\ShippingNoticeLineRepository" type="service" id="App\Repository\ShippingNoticeLineRepository"/>
        <argument key="App\Repository\ShippingNoticeLineStatusRepository" type="service" id="App\Repository\ShippingNoticeLineStatusRepository"/>
        <argument key="App\Repository\ShippingNoticeStatusRepository" type="service" id="App\Repository\ShippingNoticeStatusRepository"/>
        <argument key="App\Repository\StockLineRepository" type="service" id="App\Repository\StockLineRepository"/>
        <argument key="App\Repository\StockLineStatusRepository" type="service" id="App\Repository\StockLineStatusRepository"/>
        <argument key="App\Repository\TaskRepository" type="service" id="App\Repository\TaskRepository"/>
        <argument key="App\Repository\TaskStatusRepository" type="service" id="App\Repository\TaskStatusRepository"/>
        <argument key="App\Repository\TemplateRepository" type="service" id="App\Repository\TemplateRepository"/>
        <argument key="App\Repository\TemplateTypeRepository" type="service" id="App\Repository\TemplateTypeRepository"/>
        <argument key="App\Repository\TextRepository" type="service" id="App\Repository\TextRepository"/>
        <argument key="App\Repository\TextTranslationRepository" type="service" id="App\Repository\TextTranslationRepository"/>
        <argument key="App\Repository\UserRepository" type="service" id="App\Repository\UserRepository"/>
        <argument key="App\Repository\VatRepository" type="service" id="App\Repository\VatRepository"/>
        <argument key="App\Repository\WarehouseRepository" type="service" id="App\Repository\WarehouseRepository"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.V.o0zE7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.pNNo5z3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\Client\ClientPutItemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Client\ClientPutItemController"/>
      <argument>App\Controller\Client\ClientPutItemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\Client\ClientRemindPasswordCollectionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Client\ClientRemindPasswordCollectionController"/>
      <argument>App\Controller\Client\ClientRemindPasswordCollectionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\Client\ClientSignupPostCollectionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Client\ClientSignupPostCollectionController"/>
      <argument>App\Controller\Client\ClientSignupPostCollectionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\DownloadFileAction" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\DownloadFileAction"/>
      <argument>App\Controller\DownloadFileAction</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\Opportunity\OpportunityNotification" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Opportunity\OpportunityNotification"/>
      <argument>App\Controller\Opportunity\OpportunityNotification</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\User\UserPostCollectionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\UserPostCollectionController"/>
      <argument>App\Controller\User\UserPostCollectionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.pNNo5z3.App\Controller\User\UserPutItemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\UserPutItemController"/>
      <argument>App\Controller\User\UserPutItemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.pNNo5z3" method="withContext"/>
    </service>
    <service id=".service_locator.JFjjyG5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.JFjjyG5.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.JFjjyG5" method="withContext"/>
    </service>
    <service id=".service_locator.LoApRHL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.LoApRHL.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.LoApRHL" method="withContext"/>
    </service>
    <service id=".service_locator.3TLJ8AE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.3TLJ8AE.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.3TLJ8AE" method="withContext"/>
    </service>
    <service id=".service_locator.lSARbri" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.lSARbri.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.lSARbri" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.f1ancQ8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.mshSVvX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="api_platform.serializer.context_builder.filter.inner" class="ApiPlatform\Core\Serializer\SerializerContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.identifiers_extractor.cached.inner" class="ApiPlatform\Core\Api\IdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Core\Hydra\Serializer\CollectionNormalizer" public="false">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\Core\JsonSchema\SchemaFactory" public="false">
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="debug.api_platform.collection_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainCollectionDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.collection_data_provider"/>
    </service>
    <service id="debug.api_platform.item_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainItemDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.item_data_provider"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.subresource_data_provider"/>
    </service>
    <service id="debug.api_platform.data_persister.inner" class="ApiPlatform\Core\DataPersister\ChainDataPersister" public="false">
      <argument type="tagged_iterator" tag="api_platform.data_persister"/>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.bhurMHC"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.bhurMHC"/>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway.inner" class="ApiPlatform\Core\Swagger\Serializer\DocumentationNormalizer" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.operation_path_resolver.router"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument>/oauth/v2/token</argument>
      <argument>/oauth/v2/auth</argument>
      <argument type="collection"/>
      <argument>%api_platform.swagger.api_keys%</argument>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>true</argument>
      <argument>page</argument>
      <argument>true</argument>
      <argument>itemsPerPage</argument>
      <argument>%api_platform.formats%</argument>
      <argument>true</argument>
      <argument>pagination</argument>
      <argument>%api_platform.swagger.versions%</argument>
    </service>
    <service id="api_platform.route_name_resolver.cached.inner" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver" public="false">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached.inner" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id=".errored..service_locator.I._eZQe.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.DPdmpKe.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.TAz2alH.App\Entity\Client" class="App\Entity\Client"/>
    <service id=".errored..service_locator.8ww7YMj.App\Entity\File" class="App\Entity\File"/>
    <service id=".errored..service_locator.Xqs7AOo.App\Entity\Opportunity" class="App\Entity\Opportunity"/>
    <service id=".errored..service_locator.5kT8q.7.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.WbvwzyZ"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="lexik:jwt:check-config">lexik_jwt_authentication.check_config_command</argument>
        <argument key="lexik:jwt:generate-token">lexik_jwt_authentication.generate_token_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="vich:mapping:debug-class">vich_uploader.command.mapping_debug_class</argument>
        <argument key="vich:mapping:debug">vich_uploader.command.mapping_debug</argument>
        <argument key="vich:mapping:list-classes">vich_uploader.command.mapping_list_classes</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="liip:imagine:cache:remove">liip_imagine.command.cache_remove</argument>
        <argument key="liip:imagine:cache:resolve">liip_imagine.command.cache_resolve</argument>
        <argument key="gesdinet:jwt:clear">Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand</argument>
        <argument key="gesdinet:jwt:revoke">Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.WbvwzyZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" type="service" id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand"/>
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" type="service" id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service" id="lexik_jwt_authentication.check_config_command"/>
        <argument key="lexik_jwt_authentication.generate_token_command" type="service" id="lexik_jwt_authentication.generate_token_command"/>
        <argument key="liip_imagine.command.cache_remove" type="service" id="liip_imagine.command.cache_remove"/>
        <argument key="liip_imagine.command.cache_resolve" type="service" id="liip_imagine.command.cache_resolve"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="vich_uploader.command.mapping_debug" type="service" id="vich_uploader.command.mapping_debug"/>
        <argument key="vich_uploader.command.mapping_debug_class" type="service" id="vich_uploader.command.mapping_debug_class"/>
        <argument key="vich_uploader.command.mapping_list_classes" type="service" id="vich_uploader.command.mapping_list_classes"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>4vLvxdy3Ze</argument>
      <argument>0</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>IjWngw-X63</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>yKq4iiySmB</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>U2np-68KsJ</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>UF5TFm0cWI</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>BeQVwmEaij</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>lsvd+wUr7e</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="api_platform.cache.route_name_resolver.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>fpizpgAqKR</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>oybB-Ghp6O</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>bE6M7pNNdE</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.resource.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>FBUWsaCJL8</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.property.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>QD3TdbeX3l</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/Users/beevester/PhpstormProjects/kichoseCrm/crm-api/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.7puFXBj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id=".service_locator.RnpDE64" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.jiHemF9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service" id="jms_serializer.iterator_handler"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Liip\ImagineBundle\Imagine\Data\DataManager" alias="liip_imagine.data.manager" public="false"/>
    <service id="Liip\ImagineBundle\Imagine\Filter\FilterManager" alias="liip_imagine.filter.manager" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.authentication.session_strategy.login" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.login" alias="App\Security\UserChecker" public="false"/>
    <service id="security.authentication.session_strategy.client_login" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.client_login" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.frontend_profile" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.frontend_profile" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.frontend" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.frontend" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.docs" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.docs" alias="App\Security\UserChecker" public="false"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="App\Security\UserChecker" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="api_platform.serializer" alias="serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor" public="false"/>
    <service id="api_platform.property_info" alias="property_info" public="false"/>
    <service id="ApiPlatform\Core\Api\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Core\Api\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Core\Api\IriConverterInterface" alias="api_platform.iri_converter"/>
    <service id="ApiPlatform\Core\Api\OperationAwareFormatsProviderInterface" alias="api_platform.formats_provider">
      <deprecated>The "%alias_id%" alias is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="ApiPlatform\Core\Serializer\SerializerContextBuilderInterface" alias="api_platform.serializer.context_builder.filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="api_platform.operation_path_resolver" alias="api_platform.operation_path_resolver.router" public="false"/>
    <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.patch_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_subresource" alias="api_platform.action.placeholder" public="true"/>
    <service id="ApiPlatform\Core\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Core\Api\IdentifiersExtractorInterface" alias="api_platform.identifiers_extractor.cached"/>
    <service id="ApiPlatform\Core\DataPersister\DataPersisterInterface" alias="debug.api_platform.data_persister"/>
    <service id="ApiPlatform\Core\DataProvider\ItemDataProviderInterface" alias="debug.api_platform.item_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\CollectionDataProviderInterface" alias="debug.api_platform.collection_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\SubresourceDataProviderInterface" alias="debug.api_platform.subresource_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\Pagination" alias="api_platform.pagination"/>
    <service id="api_platform.operation_path_resolver.default" alias="api_platform.operation_path_resolver.underscore"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.path_segment_name_generator.underscore"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_factory" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Core\JsonSchema\TypeFactoryInterface" alias="api_platform.json_schema.type_factory" public="false"/>
    <service id="ApiPlatform\Core\JsonSchema\SchemaFactoryInterface" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Core\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Core\Security\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.lcobucci"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="lexik_jwt_authentication.jwt_token_authenticator" alias="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.lcobucci" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.lcobucci"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.raw" public="true"/>
    <service id="vich_uploader.storage" alias="vich_uploader.storage.flysystem"/>
    <service id="Vich\UploaderBundle\Storage\StorageInterface" alias="vich_uploader.storage.flysystem" public="false"/>
    <service id="Vich\UploaderBundle\Storage\FileSystemStorage" alias="vich_uploader.storage.file_system" public="false"/>
    <service id="vich_uploader.metadata_driver" alias="vich_uploader.metadata_driver.chain" public="false"/>
    <service id="vich_uploader.metadata.cache" alias="vich_uploader.metadata.cache.file_cache" public="false"/>
    <service id="Vich\UploaderBundle\Mapping\PropertyMappingFactory" alias="vich_uploader.property_mapping_factory" public="false"/>
    <service id="vich_uploader.namer_uniqid" alias="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="vich_uploader.namer_property" alias="Vich\UploaderBundle\Naming\PropertyNamer" public="true"/>
    <service id="vich_uploader.namer_origname" alias="Vich\UploaderBundle\Naming\OrignameNamer" public="true"/>
    <service id="vich_uploader.namer_hash" alias="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="vich_uploader.namer_base64" alias="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="vich_uploader.directory_namer_subdir" alias="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_property" alias="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_current_date_time" alias="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_smart_unique" alias="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true"/>
    <service id="Vich\UploaderBundle\Handler\DownloadHandler" alias="vich_uploader.download_handler" public="false"/>
    <service id="Vich\UploaderBundle\Handler\UploadHandler" alias="vich_uploader.upload_handler" public="false"/>
    <service id="Vich\UploaderBundle\Storage\FlysystemStorage" alias="vich_uploader.storage.flysystem" public="false"/>
    <service id="Vich\UploaderBundle\Form\Type\VichFileType" alias="vich_uploader.form.type.file" public="false"/>
    <service id="Vich\UploaderBundle\Form\Type\VichImageType" alias="vich_uploader.form.type.image" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy" public="false"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default" public="false"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory" public="false"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="Liip\ImagineBundle\Config\FilterFactoryCollection" alias="liip_imagine.config.filter_factory_collection"/>
    <service id="Liip\ImagineBundle\Config\StackBuilder" alias="liip_imagine.config.stack_builder"/>
    <service id="Liip\ImagineBundle\Config\StackCollection" alias="liip_imagine.config.stack_collection"/>
    <service id="liip_imagine.controller" alias="Liip\ImagineBundle\Controller\ImagineController" public="true"/>
    <service id="liip_imagine" alias="liip_imagine.gd"/>
    <service id="Liip\ImagineBundle\Imagine\Cache\CacheManager" alias="liip_imagine.cache.manager" public="false"/>
    <service id="Gesdinet\JWTRefreshTokenBundle\Model\RefreshTokenManagerInterface" alias="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="League\Flysystem\FilesystemInterface $fileFilesystem" alias="oneup_flysystem.file_filesystem_filesystem" public="false"/>
    <service id="League\Flysystem\FilesystemInterface $imageFilesystem" alias="oneup_flysystem.image_filesystem_filesystem" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.bhurMHC"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="gesdinet.jwtrefreshtoken.object_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="gesdinet.jwtrefreshtoken.user_checker" alias="security.user_checker"/>
    <service id=".service_locator.c3XszGA" alias="api_platform.serializer_locator" public="false"/>
    <service id=".service_locator.Tw.LDbw" alias="api_platform.filter_locator" public="false"/>
    <service id=".service_locator.tHpW6v3" alias=".service_locator.Y7gDuDN" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.inherited.inner" alias="api_platform.metadata.property.metadata_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory" public="false"/>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation.inner" alias="api_platform.metadata.property.metadata_factory.serializer" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_factory.input_output" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.short_name.inner" alias="api_platform.metadata.resource.metadata_factory.php_doc" public="false"/>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.short_name" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.annotation.inner" alias="api_platform.metadata.subresource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.operation.inner" alias="api_platform.metadata.resource.filter_metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.inherited.inner" alias="api_platform.metadata.property.name_collection_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.formats.inner" alias="api_platform.metadata.resource.metadata_factory.operation" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.serializer.context_builder.filter" public="false"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.identifiers_extractor.cached" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.inherited" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation.inner" alias="api_platform.metadata.resource.name_collection_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.xml" public="false"/>
    <service id="api_platform.hydra.normalizer.collection" alias="api_platform.hydra.normalizer.collection_filters" public="false"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view" public="false"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="api_platform.collection_data_provider" alias="debug.api_platform.collection_data_provider"/>
    <service id="api_platform.item_data_provider" alias="debug.api_platform.item_data_provider"/>
    <service id="api_platform.subresource_data_provider" alias="debug.api_platform.subresource_data_provider"/>
    <service id="api_platform.data_persister" alias="debug.api_platform.data_persister" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="api_platform.swagger.normalizer.documentation" alias="api_platform.swagger.normalizer.api_gateway" public="false"/>
    <service id="api_platform.route_name_resolver" alias="api_platform.route_name_resolver.cached" public="false"/>
    <service id="api_platform.subresource_operation_factory" alias="api_platform.subresource_operation_factory.cached" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.cached.inner" alias="api_platform.metadata.resource.metadata_factory.formats" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.metadata.property.metadata_factory.validator" public="false"/>
    <service id="console.command.public_alias.App\Command\ElasticaIndexProductCommand" alias="App\Command\ElasticaIndexProductCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ElasticaIndexSearchCommand" alias="App\Command\ElasticaIndexSearchCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\GoogleAuthCommand" alias="App\Command\GoogleAuthCommand" public="true"/>
    <service id="console.command.public_alias.api_platform.json_schema.json_schema_generate_command" alias="api_platform.json_schema.json_schema_generate_command" public="true"/>
    <service id="console.command.public_alias.api_platform.swagger.command.swagger_command" alias="api_platform.swagger.command.swagger_command" public="true"/>
  </services>
</container>
