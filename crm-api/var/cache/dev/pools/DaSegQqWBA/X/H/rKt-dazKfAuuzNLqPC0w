<?php //%255BApp%255CEntity%255CAddress%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['ApiPlatform\\Core\\Annotation\\ApiFilter'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiFilter')),
        clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
        clone $p['ApiPlatform\\Core\\Annotation\\ApiFilter'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                'address',
            ],
            'repositoryClass' => [
                1 => 'App\\Repository\\AddressRepository',
            ],
            'collectionOperations' => [
                2 => [
                    'get' => [
                        'access_control' => 'is_granted(\'ROLE_ADDRESS_LIST\')',
                    ],
                    'post' => [
                        'access_control' => 'is_granted(\'ROLE_ADDRESS_CREATE\')',
                    ],
                ],
            ],
            'itemOperations' => [
                2 => [
                    'get' => [
                        'access_control' => 'is_granted(\'ROLE_ADDRESS_SHOW\')',
                    ],
                    'put' => [
                        'access_control' => 'is_granted(\'ROLE_ADDRESS_UPDATE\')',
                    ],
                    'delete' => [
                        'access_control' => 'is_granted(\'ROLE_ADDRESS_DELETE\')',
                    ],
                ],
            ],
            'attributes' => [
                2 => [
                    'normalization_context' => [
                        'groups' => [
                            'address_read',
                            'read',
                            'is_active_read',
                        ],
                    ],
                    'denormalization_context' => [
                        'groups' => [
                            'address_write',
                            'is_active_write',
                        ],
                    ],
                    'order' => [
                        'id' => 'DESC',
                    ],
                ],
            ],
            'filterClass' => [
                3 => 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\DateFilter',
                'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\SearchFilter',
                'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Filter\\OrderFilter',
            ],
            'properties' => [
                3 => [
                    'createdAt',
                    'updatedAt',
                ],
                [
                    'id' => 'exact',
                    'postCode' => 'ipartial',
                    'country.name' => 'ipartial',
                    'city' => 'ipartial',
                    'region' => 'ipartial',
                    'district' => 'ipartial',
                    'street' => 'ipartial',
                    'building' => 'ipartial',
                    'apartment' => 'ipartial',
                    'comment' => 'ipartial',
                ],
                [
                    'id',
                    'postCode',
                    'country.name',
                    'city',
                    'region',
                    'district',
                    'street',
                    'building',
                    'apartment',
                    'comment',
                    'createdAt',
                    'updatedAt',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[2],
        $o[3],
        $o[4],
        $o[5],
    ],
    []
); }];
