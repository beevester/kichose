{"remainingRequest":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/src/pages/contact/Form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/src/pages/contact/Form.vue","mtime":1601470421790},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/cache-loader/dist/cjs.js","mtime":1601472830261},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/babel-loader/lib/index.js","mtime":1601472829745},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/cache-loader/dist/cjs.js","mtime":1601472830261},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/vue-loader/lib/index.js","mtime":1601472869555}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgSXRlbUVkaXRBY3Rpb25zIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0L0l0ZW1FZGl0QWN0aW9ucycKaW1wb3J0IEl0ZW1FcnJvcnMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9sYXlvdXQvZXJyb3JzL0l0ZW1FcnJvcnMnCgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSXRlbUVycm9ycywKICAgIEl0ZW1FZGl0QWN0aW9ucwogIH0sCiAgcHJvcHM6IHsKICAgIGhhbmRsZVN1Ym1pdDogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBpdGVtOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBzaG93QWN0aW9uczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKHsKICAgICAgZXJyb3JzOiAnY29udGFjdC9lcnJvcnMnCiAgICB9KQogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMucmVzZXQoKQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyh7CiAgICAgIHJlc2V0OiAnY29udGFjdC9yZXNldCcKICAgIH0pLAogICAgdXBkYXRlVmFsdWUocHJvcGVydHksIHZhbHVlKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnY29udGFjdC9DT05UQUNUX1VQREFURV9JVEVNJywgeyBbcHJvcGVydHldOiB2YWx1ZSB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Form.vue","sourceRoot":"src/pages/contact","sourcesContent":["<template>\n  <form @submit.prevent=\"handleSubmit(item)\">\n    <v-row>\n      <item-errors entity=\"contact\" />\n\n      <v-col cols=\"12\">\n        <form-input\n          :item=\"item\"\n          :errors=\"errors\"\n          property=\"value\"\n          label=\"value\"\n          @formUpdated=\"updateValue\"\n        />\n        <form-select\n          :item=\"item\"\n          :errors=\"errors\"\n          property=\"contactType\"\n          option-store=\"contactType\"\n          label=\"contactType_name\"\n          @formUpdated=\"updateValue\"\n        />\n        <form-checkbox\n          :item=\"item\"\n          :errors=\"errors\"\n          property=\"isActive\"\n          label=\"isActive\"\n          @formUpdated=\"updateValue\"\n        />\n      </v-col>\n\n      <v-col v-if=\"showActions\" cols=\"12\">\n        <item-edit-actions :item=\"item\" entity=\"Contact\" path=\"contact\" />\n      </v-col>\n    </v-row>\n  </form>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nimport ItemEditActions from '../../components/layout/ItemEditActions'\nimport ItemErrors from '../../components/layout/errors/ItemErrors'\n\nexport default {\n  components: {\n    ItemErrors,\n    ItemEditActions\n  },\n  props: {\n    handleSubmit: {\n      type: Function,\n      required: true\n    },\n    item: {\n      type: Object,\n      required: true\n    },\n    showActions: {\n      type: Boolean,\n      default() {\n        return true\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({\n      errors: 'contact/errors'\n    })\n  },\n  beforeDestroy() {\n    this.reset()\n  },\n  methods: {\n    ...mapActions({\n      reset: 'contact/reset'\n    }),\n    updateValue(property, value) {\n      this.$store.commit('contact/CONTACT_UPDATE_ITEM', { [property]: value })\n    }\n  }\n}\n</script>\n"]}]}