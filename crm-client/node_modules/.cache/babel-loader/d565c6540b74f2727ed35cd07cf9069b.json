{"remainingRequest":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/babel-loader/lib/index.js!/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/src/store/modules/group/actions.js","dependencies":[{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/src/store/modules/group/actions.js","mtime":1601470421840},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/.babelrc","mtime":1601470421774},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/cache-loader/dist/cjs.js","mtime":1601472830261},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/babel-loader/lib/index.js","mtime":1601472829745},{"path":"/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1601472857689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHBsdXJhbGl6ZSBmcm9tICdwbHVyYWxpemUnOwppbXBvcnQgKiBhcyBjcnVkIGZyb20gJy4uLy4uLy4uL3V0aWxzL2NydWQnOwppbXBvcnQgeyBuYW1lc3BhY2UgfSBmcm9tICcuL211dGF0aW9uX3R5cGVzJzsKaW1wb3J0IGF4aW9zIGZyb20gJy4uLy4uLy4uL2ludGVyY2VwdG9yJzsKaW1wb3J0IHsgQVBJX0hPU1QgfSBmcm9tICcuLi8uLi8uLi9jb25maWcvX2VudHJ5cG9pbnQnOwpleHBvcnQgdmFyIGdldEl0ZW0gPSBmdW5jdGlvbiBnZXRJdGVtKF9yZWYsIGlkKSB7CiAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogIGNvbW1pdCgiIi5jb25jYXQobmFtZXNwYWNlLCAiX1NFVF9FUlJPUiIpLCBudWxsKTsKICByZXR1cm4gYXhpb3MuZ2V0KCIiLmNvbmNhdChBUElfSE9TVCwgIi8iKS5jb25jYXQocGx1cmFsaXplKG5hbWVzcGFjZS50b0xvd2VyQ2FzZSgpKSwgIi8iKS5jb25jYXQoaWQpKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgfSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgdmFyIHJvbGVzID0gW107CiAgICBkYXRhLnJvbGVzLmZvckVhY2goZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgcm9sZXMucHVzaChyb2xlWydAaWQnXSk7CiAgICB9KTsKICAgIGRhdGEucm9sZUlSSXMgPSByb2xlczsKICAgIGNvbW1pdCgiIi5jb25jYXQobmFtZXNwYWNlLCAiX1NFVF9JVEVNIiksIGRhdGEpOwogIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICBjb21taXQoIiIuY29uY2F0KG5hbWVzcGFjZSwgIl9TRVRfRVJST1IiKSwgZS5tZXNzYWdlKTsKICB9KTsKfTsKZXhwb3J0IHZhciBnZXRJdGVtcyA9IGZ1bmN0aW9uIGdldEl0ZW1zKF9yZWYyLCBxdWVyeSkgewogIHZhciBkaXNwYXRjaCA9IF9yZWYyLmRpc3BhdGNoLAogICAgICBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgcmV0dXJuIGNydWQuZ2V0SXRlbXMoewogICAgZGlzcGF0Y2g6IGRpc3BhdGNoLAogICAgY29tbWl0OiBjb21taXQKICB9LCBuYW1lc3BhY2UsIHF1ZXJ5KTsKfTsKZXhwb3J0IHZhciBjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUoX3JlZjMpIHsKICB2YXIgZGlzcGF0Y2ggPSBfcmVmMy5kaXNwYXRjaCwKICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0LAogICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlOwogIGNvbW1pdCgiIi5jb25jYXQobmFtZXNwYWNlLCAiX1VQREFURV9JVEVNIiksIHsKICAgIHJvbGVzOiBzdGF0ZS5pdGVtLnJvbGVJUklzCiAgfSk7CiAgcmV0dXJuIGNydWQuY3JlYXRlKHsKICAgIGRpc3BhdGNoOiBkaXNwYXRjaCwKICAgIGNvbW1pdDogY29tbWl0LAogICAgc3RhdGU6IHN0YXRlCiAgfSwgbmFtZXNwYWNlKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICBjb21taXQoIiIuY29uY2F0KG5hbWVzcGFjZSwgIl9SRVNFVCIpKTsKICAgIHJldHVybiBkYXRhOwogIH0pOwp9OwpleHBvcnQgdmFyIHVwZGF0ZSA9IGZ1bmN0aW9uIHVwZGF0ZShfcmVmNCkgewogIHZhciBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoLAogICAgICBjb21taXQgPSBfcmVmNC5jb21taXQsCiAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGU7CiAgY29tbWl0KCIiLmNvbmNhdChuYW1lc3BhY2UsICJfVVBEQVRFX0lURU0iKSwgewogICAgcm9sZXM6IHN0YXRlLml0ZW0ucm9sZUlSSXMKICB9KTsKICByZXR1cm4gY3J1ZC51cGRhdGUoewogICAgZGlzcGF0Y2g6IGRpc3BhdGNoLAogICAgY29tbWl0OiBjb21taXQsCiAgICBzdGF0ZTogc3RhdGUKICB9LCBuYW1lc3BhY2UpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgIGNvbW1pdCgiIi5jb25jYXQobmFtZXNwYWNlLCAiX1JFU0VUIikpOwogICAgcmV0dXJuIGRhdGE7CiAgfSk7Cn07CmV4cG9ydCB2YXIgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKF9yZWY1LCBpdGVtKSB7CiAgdmFyIGRpc3BhdGNoID0gX3JlZjUuZGlzcGF0Y2gsCiAgICAgIGNvbW1pdCA9IF9yZWY1LmNvbW1pdDsKICByZXR1cm4gY3J1ZC5yZW1vdmUoewogICAgZGlzcGF0Y2g6IGRpc3BhdGNoLAogICAgY29tbWl0OiBjb21taXQKICB9LCBuYW1lc3BhY2UsIGl0ZW0pOwp9OwpleHBvcnQgdmFyIHJlc2V0ID0gZnVuY3Rpb24gcmVzZXQoX3JlZjYpIHsKICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogIHJldHVybiBjcnVkLnJlc2V0KHsKICAgIGNvbW1pdDogY29tbWl0CiAgfSwgbmFtZXNwYWNlKTsKfTs="},{"version":3,"sources":["/Users/beevester/PhpstormProjects/kichoseCrm/inshop-crm-client/src/store/modules/group/actions.js"],"names":["pluralize","crud","namespace","axios","API_HOST","getItem","id","commit","get","toLowerCase","then","response","data","roles","forEach","role","push","roleIRIs","catch","e","message","getItems","query","dispatch","create","state","item","update","remove","reset"],"mappings":"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","sourcesContent":["import pluralize from 'pluralize'\nimport * as crud from '../../../utils/crud'\nimport { namespace } from './mutation_types'\nimport axios from '../../../interceptor'\nimport { API_HOST } from '../../../config/_entrypoint'\n\nexport const getItem = ({ commit }, id) => {\n  commit(`${namespace}_SET_ERROR`, null)\n\n  return axios\n    .get(`${API_HOST}/${pluralize(namespace.toLowerCase())}/${id}`)\n    .then(response => response.data)\n    .then(data => {\n      const roles = []\n      data.roles.forEach(role => {\n        roles.push(role['@id'])\n      })\n      data.roleIRIs = roles\n\n      commit(`${namespace}_SET_ITEM`, data)\n    })\n    .catch(e => {\n      commit(`${namespace}_SET_ERROR`, e.message)\n    })\n}\n\nexport const getItems = ({ dispatch, commit }, query) =>\n  crud.getItems({ dispatch, commit }, namespace, query)\n\nexport const create = ({ dispatch, commit, state }) => {\n  commit(`${namespace}_UPDATE_ITEM`, { roles: state.item.roleIRIs })\n\n  return crud.create({ dispatch, commit, state }, namespace).then(data => {\n    commit(`${namespace}_RESET`)\n\n    return data\n  })\n}\n\nexport const update = ({ dispatch, commit, state }) => {\n  commit(`${namespace}_UPDATE_ITEM`, { roles: state.item.roleIRIs })\n\n  return crud.update({ dispatch, commit, state }, namespace).then(data => {\n    commit(`${namespace}_RESET`)\n\n    return data\n  })\n}\n\nexport const remove = ({ dispatch, commit }, item) =>\n  crud.remove({ dispatch, commit }, namespace, item)\n\nexport const reset = ({ commit }) => crud.reset({ commit }, namespace)\n"]}]}